INFO:     Will watch for changes in these directories: ['/Users/dineshpatel/code/projects/SynapseDTE']
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [59820] using WatchFiles
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'orm_mode' has been renamed to 'from_attributes'
  warnings.warn(message, UserWarning)
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
Security middleware configured successfully
INFO:     Started server process [59825]
INFO:     Waiting for application startup.
{"event": "Starting SynapseDT application - Clean Architecture Edition", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.055690Z"}
2025-07-31 23:49:08,066 INFO sqlalchemy.engine.Engine select pg_catalog.version()
select pg_catalog.version()
2025-07-31 23:49:08,066 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:49:08,067 INFO sqlalchemy.engine.Engine select current_schema()
select current_schema()
2025-07-31 23:49:08,067 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:49:08,068 INFO sqlalchemy.engine.Engine show standard_conforming_strings
show standard_conforming_strings
2025-07-31 23:49:08,068 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:49:08,068 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:08,068 INFO sqlalchemy.engine.Engine SELECT 1
SELECT 1
2025-07-31 23:49:08,068 INFO sqlalchemy.engine.Engine [generated in 0.00004s] ()
[generated in 0.00004s] ()
2025-07-31 23:49:08,069 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"event": "Database connection verified", "logger": "app.core.database", "level": "info", "timestamp": "2025-08-01T03:49:08.074321Z"}
{"event": "Job manager initialized with 195 jobs", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.074367Z"}
{"event": "Clean architecture dependencies initialized", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.074388Z"}
Connected to Temporal server
{"event": "Temporal client initialized and connected", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.092633Z"}
{"event": "Application startup complete", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.092670Z"}
INFO:     Application startup complete.
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.655689Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.658319Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:49:08,672 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:08,854 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:08,854 INFO sqlalchemy.engine.Engine [generated in 0.00012s] (3,)
[generated in 0.00012s] (3,)
2025-07-31 23:49:08,855 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:08,855 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:08,855 INFO sqlalchemy.engine.Engine [cached since 0.0003698s ago] (3,)
[cached since 0.0003698s ago] (3,)
Email templates loaded successfully
2025-07-31 23:49:08,877 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:49:08,877 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[generated in 0.00013s] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:08.877862Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:08.877902Z"}
2025-07-31 23:49:08,878 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:49:08,878 INFO sqlalchemy.engine.Engine [generated in 0.00005s] ('Test Execution',)
[generated in 0.00005s] ('Test Execution',)
2025-07-31 23:49:08,880 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:49:08,880 INFO sqlalchemy.engine.Engine [generated in 0.00005s] (58, 156, 'Test Execution')
[generated in 0.00005s] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:08.882499Z"}
2025-07-31 23:49:08,882 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:49:08,882 INFO sqlalchemy.engine.Engine [generated in 0.00004s] (58, 156, 'Test Execution')
[generated in 0.00004s] (58, 156, 'Test Execution')
2025-07-31 23:49:08,885 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:49:08,889 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:49:08,889 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (58, 156, 'Test Execution')
[generated in 0.00007s] (58, 156, 'Test Execution')
Response 200 in 0.231s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.2345, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.890130Z"}
INFO:     127.0.0.1:63210 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:08.894716Z"}
2025-07-31 23:49:08,894 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.236s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.2401, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:08.898441Z"}
INFO:     127.0.0.1:63220 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:10.036162Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:10,050 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:10,050 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:10,050 INFO sqlalchemy.engine.Engine [cached since 1.196s ago] (3,)
[cached since 1.196s ago] (3,)
2025-07-31 23:49:10,065 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:10,066 INFO sqlalchemy.engine.Engine [generated in 0.00010s] (58, 156)
[generated in 0.00010s] (58, 156)
2025-07-31 23:49:10,072 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:10,072 INFO sqlalchemy.engine.Engine [generated in 0.00013s] (480,)
[generated in 0.00013s] (480,)
2025-07-31 23:49:10,078 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:10,078 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (3,)
[generated in 0.00008s] (3,)
2025-07-31 23:49:10,079 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:10,079 INFO sqlalchemy.engine.Engine [generated in 0.00011s] (434,)
[generated in 0.00011s] (434,)
2025-07-31 23:49:10,081 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:10,081 INFO sqlalchemy.engine.Engine [cached since 0.001937s ago] (435,)
[cached since 0.001937s ago] (435,)
2025-07-31 23:49:10,082 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.048s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0501, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:10.086230Z"}
INFO:     127.0.0.1:63210 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:15.092388Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:15,102 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:15,102 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:15,102 INFO sqlalchemy.engine.Engine [cached since 6.248s ago] (3,)
[cached since 6.248s ago] (3,)
2025-07-31 23:49:15,116 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:15,116 INFO sqlalchemy.engine.Engine [cached since 5.051s ago] (58, 156)
[cached since 5.051s ago] (58, 156)
2025-07-31 23:49:15,119 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:15,120 INFO sqlalchemy.engine.Engine [cached since 5.048s ago] (480,)
[cached since 5.048s ago] (480,)
2025-07-31 23:49:15,125 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:15,125 INFO sqlalchemy.engine.Engine [cached since 5.048s ago] (3,)
[cached since 5.048s ago] (3,)
2025-07-31 23:49:15,126 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:15,126 INFO sqlalchemy.engine.Engine [cached since 5.046s ago] (434,)
[cached since 5.046s ago] (434,)
2025-07-31 23:49:15,127 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:15,127 INFO sqlalchemy.engine.Engine [cached since 5.048s ago] (435,)
[cached since 5.048s ago] (435,)
2025-07-31 23:49:15,128 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.039s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0405, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:15.132912Z"}
INFO:     127.0.0.1:63247 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/auth/login", "client_ip": "127.0.0.1", "user_agent": "python-requests/2.32.4", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:18.791893Z"}
POST http://localhost:8000/api/v1/auth/login from 127.0.0.1
2025-07-31 23:49:18,805 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:18,805 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-07-31 23:49:18,805 INFO sqlalchemy.engine.Engine [generated in 0.00006s] ('tester@example.com',)
[generated in 0.00006s] ('tester@example.com',)
(trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-07-31 23:49:18,999 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.210s
{"method": "POST", "url": "http://localhost:8000/api/v1/auth/login", "status_code": 200, "process_time": 0.2115, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:19.003351Z"}
INFO:     127.0.0.1:63253 - "POST /api/v1/auth/login HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "python-requests/2.32.4", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:19.004989Z"}
POST http://localhost:8000/api/v1/test-execution/executions/23/review from 127.0.0.1
2025-07-31 23:49:19,014 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:19,014 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:19,014 INFO sqlalchemy.engine.Engine [cached since 10.16s ago] (3,)
[cached since 10.16s ago] (3,)
Claude provider initialized with model: claude-3-5-sonnet-20241022
Claude provider initialized successfully
Gemini provider skipped - using Claude only for LLM calls
Hybrid LLM service initialized with providers: ['claude']
Hybrid analysis enabled: True
Failover enabled with max failures: 3
2025-07-31 23:49:19,045 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:49:19,045 INFO sqlalchemy.engine.Engine [generated in 0.00006s] (23,)
[generated in 0.00006s] (23,)
2025-07-31 23:49:19,046 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:49:19,046 INFO sqlalchemy.engine.Engine [generated in 0.00004s] (23,)
[generated in 0.00004s] (23,)
2025-07-31 23:49:19,048 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
2025-07-31 23:49:19,048 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (23, 480, <ReviewStatus.APPROVED: 'approved'>, 'Test approved via API', None, None, None, None, None, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', False, None, False, None, 3, 3, 3)
[generated in 0.00008s] (23, 480, <ReviewStatus.APPROVED: 'approved'>, 'Test approved via API', None, None, None, None, None, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', False, None, False, None, 3, 3, 3)
2025-07-31 23:49:19,054 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:49:19,065 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:19,065 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
2025-07-31 23:49:19,065 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (5,)
[generated in 0.00007s] (5,)
2025-07-31 23:49:19,067 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
2025-07-31 23:49:19,068 INFO sqlalchemy.engine.Engine [generated in 0.00012s] (23, 'reviewed', '{"review_status": "approved", "overall_score": 0.0, "requires_retest": false}', 3, None, None, None)
[generated in 0.00012s] (23, 'reviewed', '{"review_status": "approved", "overall_score": 0.0, "requires_retest": false}', 3, None, None, None)
2025-07-31 23:49:19,070 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.069s
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "status_code": 200, "process_time": 0.0701, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:19.075130Z"}
INFO:     127.0.0.1:63256 - "POST /api/v1/test-execution/executions/23/review HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/22/review", "client_ip": "127.0.0.1", "user_agent": "python-requests/2.32.4", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:19.076741Z"}
POST http://localhost:8000/api/v1/test-execution/executions/22/review from 127.0.0.1
2025-07-31 23:49:19,085 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:19,085 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:19,085 INFO sqlalchemy.engine.Engine [cached since 10.23s ago] (3,)
[cached since 10.23s ago] (3,)
Claude provider initialized with model: claude-3-5-sonnet-20241022
Claude provider initialized successfully
Gemini provider skipped - using Claude only for LLM calls
Hybrid LLM service initialized with providers: ['claude']
Hybrid analysis enabled: True
Failover enabled with max failures: 3
2025-07-31 23:49:19,103 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:49:19,103 INFO sqlalchemy.engine.Engine [cached since 0.05797s ago] (22,)
[cached since 0.05797s ago] (22,)
2025-07-31 23:49:19,104 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:49:19,104 INFO sqlalchemy.engine.Engine [cached since 0.05762s ago] (22,)
[cached since 0.05762s ago] (22,)
2025-07-31 23:49:19,105 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
2025-07-31 23:49:19,105 INFO sqlalchemy.engine.Engine [cached since 0.0571s ago] (22, 480, <ReviewStatus.APPROVED: 'approved'>, 'Test approved via API', None, None, None, None, None, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', False, None, False, None, 3, 3, 3)
[cached since 0.0571s ago] (22, 480, <ReviewStatus.APPROVED: 'approved'>, 'Test approved via API', None, None, None, None, None, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', False, None, False, None, 3, 3, 3)
2025-07-31 23:49:19,108 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:49:19,117 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:19,117 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
2025-07-31 23:49:19,117 INFO sqlalchemy.engine.Engine [cached since 0.05216s ago] (6,)
[cached since 0.05216s ago] (6,)
2025-07-31 23:49:19,119 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
2025-07-31 23:49:19,119 INFO sqlalchemy.engine.Engine [cached since 0.05187s ago] (22, 'reviewed', '{"review_status": "approved", "overall_score": 0.0, "requires_retest": false}', 3, None, None, None)
[cached since 0.05187s ago] (22, 'reviewed', '{"review_status": "approved", "overall_score": 0.0, "requires_retest": false}', 3, None, None, None)
2025-07-31 23:49:19,123 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.049s
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/22/review", "status_code": 200, "process_time": 0.0505, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:19.127196Z"}
INFO:     127.0.0.1:63260 - "POST /api/v1/test-execution/executions/22/review HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:20.144325Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:20,160 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:20,160 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:20,160 INFO sqlalchemy.engine.Engine [cached since 11.31s ago] (3,)
[cached since 11.31s ago] (3,)
2025-07-31 23:49:20,176 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:20,176 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (58, 156)
[cached since 10.11s ago] (58, 156)
2025-07-31 23:49:20,180 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:20,180 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (480,)
[cached since 10.11s ago] (480,)
2025-07-31 23:49:20,185 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:20,185 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (3,)
[cached since 10.11s ago] (3,)
2025-07-31 23:49:20,186 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:20,186 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (434,)
[cached since 10.11s ago] (434,)
2025-07-31 23:49:20,188 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:20,188 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (435,)
[cached since 10.11s ago] (435,)
2025-07-31 23:49:20,189 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.046s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0491, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:20.193356Z"}
INFO:     127.0.0.1:63278 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:25.205955Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:25,214 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:25,215 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:25,215 INFO sqlalchemy.engine.Engine [cached since 16.36s ago] (3,)
[cached since 16.36s ago] (3,)
2025-07-31 23:49:25,226 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:25,226 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (58, 156)
[cached since 15.16s ago] (58, 156)
2025-07-31 23:49:25,228 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:25,228 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (480,)
[cached since 15.16s ago] (480,)
2025-07-31 23:49:25,233 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:25,233 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (3,)
[cached since 15.16s ago] (3,)
2025-07-31 23:49:25,233 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:25,233 INFO sqlalchemy.engine.Engine [cached since 15.15s ago] (434,)
[cached since 15.15s ago] (434,)
2025-07-31 23:49:25,235 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:25,235 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (435,)
[cached since 15.16s ago] (435,)
2025-07-31 23:49:25,236 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.032s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0335, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:25.239457Z"}
INFO:     127.0.0.1:63281 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:30.251259Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:30,263 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:30,263 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:30,263 INFO sqlalchemy.engine.Engine [cached since 21.41s ago] (3,)
[cached since 21.41s ago] (3,)
2025-07-31 23:49:30,279 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:30,279 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (58, 156)
[cached since 20.21s ago] (58, 156)
2025-07-31 23:49:30,282 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:30,282 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (480,)
[cached since 20.21s ago] (480,)
2025-07-31 23:49:30,288 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:30,288 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (3,)
[cached since 20.21s ago] (3,)
2025-07-31 23:49:30,289 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:30,289 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (434,)
[cached since 20.21s ago] (434,)
2025-07-31 23:49:30,290 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:30,290 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (435,)
[cached since 20.21s ago] (435,)
2025-07-31 23:49:30,291 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.043s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0444, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:30.295648Z"}
INFO:     127.0.0.1:63284 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:35.303100Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:35,309 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:35,309 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:35,310 INFO sqlalchemy.engine.Engine [cached since 26.46s ago] (3,)
[cached since 26.46s ago] (3,)
2025-07-31 23:49:35,320 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:35,321 INFO sqlalchemy.engine.Engine [cached since 25.26s ago] (58, 156)
[cached since 25.26s ago] (58, 156)
2025-07-31 23:49:35,323 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:35,323 INFO sqlalchemy.engine.Engine [cached since 25.25s ago] (480,)
[cached since 25.25s ago] (480,)
2025-07-31 23:49:35,327 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:35,327 INFO sqlalchemy.engine.Engine [cached since 25.25s ago] (3,)
[cached since 25.25s ago] (3,)
2025-07-31 23:49:35,327 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:35,327 INFO sqlalchemy.engine.Engine [cached since 25.25s ago] (434,)
[cached since 25.25s ago] (434,)
2025-07-31 23:49:35,328 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:35,328 INFO sqlalchemy.engine.Engine [cached since 25.25s ago] (435,)
[cached since 25.25s ago] (435,)
2025-07-31 23:49:35,329 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.028s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0287, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:35.331813Z"}
INFO:     127.0.0.1:63287 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:38.896183Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:38.902767Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:49:38,906 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:38,906 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:38,906 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] (3,)
[cached since 30.05s ago] (3,)
2025-07-31 23:49:38,910 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:38,910 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:38,910 INFO sqlalchemy.engine.Engine [cached since 30.06s ago] (3,)
[cached since 30.06s ago] (3,)
Email templates loaded successfully
2025-07-31 23:49:38,923 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:49:38,923 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 30.05s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:38.925229Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:38.925280Z"}
2025-07-31 23:49:38,925 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:49:38,925 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] ('Test Execution',)
[cached since 30.05s ago] ('Test Execution',)
2025-07-31 23:49:38,927 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:49:38,927 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] (58, 156, 'Test Execution')
[cached since 30.05s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:38.928383Z"}
2025-07-31 23:49:38,928 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:49:38,928 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] (58, 156, 'Test Execution')
[cached since 30.05s ago] (58, 156, 'Test Execution')
2025-07-31 23:49:38,930 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:49:38,933 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:49:38,933 INFO sqlalchemy.engine.Engine [cached since 30.04s ago] (58, 156, 'Test Execution')
[cached since 30.04s ago] (58, 156, 'Test Execution')
Response 200 in 0.037s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.038, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:38.934211Z"}
INFO:     127.0.0.1:63287 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:49:38.938231Z"}
2025-07-31 23:49:38,938 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.038s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0389, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:38.941689Z"}
INFO:     127.0.0.1:63291 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:40.340739Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:40,354 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:40,354 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:40,354 INFO sqlalchemy.engine.Engine [cached since 31.5s ago] (3,)
[cached since 31.5s ago] (3,)
2025-07-31 23:49:40,372 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:40,372 INFO sqlalchemy.engine.Engine [cached since 30.31s ago] (58, 156)
[cached since 30.31s ago] (58, 156)
2025-07-31 23:49:40,379 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:40,379 INFO sqlalchemy.engine.Engine [cached since 30.31s ago] (480,)
[cached since 30.31s ago] (480,)
2025-07-31 23:49:40,390 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:40,390 INFO sqlalchemy.engine.Engine [cached since 30.31s ago] (3,)
[cached since 30.31s ago] (3,)
2025-07-31 23:49:40,392 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:40,392 INFO sqlalchemy.engine.Engine [cached since 30.31s ago] (434,)
[cached since 30.31s ago] (434,)
2025-07-31 23:49:40,395 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:40,396 INFO sqlalchemy.engine.Engine [cached since 30.32s ago] (435,)
[cached since 30.32s ago] (435,)
2025-07-31 23:49:40,397 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.060s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0642, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:40.404934Z"}
INFO:     127.0.0.1:63287 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:43.621978Z"}
POST http://localhost:8000/api/v1/api/v1/test-execution/executions/23/review from 127.0.0.1
Response 404 in 0.002s
{"method": "POST", "url": "http://localhost:8000/api/v1/api/v1/test-execution/executions/23/review", "status_code": 404, "process_time": 0.0037, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:43.625696Z"}
INFO:     127.0.0.1:63291 - "POST /api/v1/api/v1/test-execution/executions/23/review HTTP/1.1" 404 Not Found
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:45.415859Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:45,431 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:45,431 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:45,431 INFO sqlalchemy.engine.Engine [cached since 36.58s ago] (3,)
[cached since 36.58s ago] (3,)
2025-07-31 23:49:45,443 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:45,443 INFO sqlalchemy.engine.Engine [cached since 35.38s ago] (58, 156)
[cached since 35.38s ago] (58, 156)
2025-07-31 23:49:45,448 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:45,448 INFO sqlalchemy.engine.Engine [cached since 35.38s ago] (480,)
[cached since 35.38s ago] (480,)
2025-07-31 23:49:45,454 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:45,454 INFO sqlalchemy.engine.Engine [cached since 35.38s ago] (3,)
[cached since 35.38s ago] (3,)
2025-07-31 23:49:45,455 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:45,456 INFO sqlalchemy.engine.Engine [cached since 35.38s ago] (434,)
[cached since 35.38s ago] (434,)
2025-07-31 23:49:45,459 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:45,459 INFO sqlalchemy.engine.Engine [cached since 35.38s ago] (435,)
[cached since 35.38s ago] (435,)
2025-07-31 23:49:45,460 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.046s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0506, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:45.466367Z"}
INFO:     127.0.0.1:63291 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:50.478887Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:50,487 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:50,487 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:50,488 INFO sqlalchemy.engine.Engine [cached since 41.63s ago] (3,)
[cached since 41.63s ago] (3,)
2025-07-31 23:49:50,501 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:50,501 INFO sqlalchemy.engine.Engine [cached since 40.44s ago] (58, 156)
[cached since 40.44s ago] (58, 156)
2025-07-31 23:49:50,504 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:50,504 INFO sqlalchemy.engine.Engine [cached since 40.43s ago] (480,)
[cached since 40.43s ago] (480,)
2025-07-31 23:49:50,509 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:50,509 INFO sqlalchemy.engine.Engine [cached since 40.43s ago] (3,)
[cached since 40.43s ago] (3,)
2025-07-31 23:49:50,510 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:50,510 INFO sqlalchemy.engine.Engine [cached since 40.43s ago] (434,)
[cached since 40.43s ago] (434,)
2025-07-31 23:49:50,511 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:50,511 INFO sqlalchemy.engine.Engine [cached since 40.43s ago] (435,)
[cached since 40.43s ago] (435,)
2025-07-31 23:49:50,512 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.036s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0369, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:50.515800Z"}
INFO:     127.0.0.1:63296 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:55.527198Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:49:55,534 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:49:55,534 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:49:55,534 INFO sqlalchemy.engine.Engine [cached since 46.68s ago] (3,)
[cached since 46.68s ago] (3,)
2025-07-31 23:49:55,548 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:49:55,548 INFO sqlalchemy.engine.Engine [cached since 45.48s ago] (58, 156)
[cached since 45.48s ago] (58, 156)
2025-07-31 23:49:55,550 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:49:55,551 INFO sqlalchemy.engine.Engine [cached since 45.48s ago] (480,)
[cached since 45.48s ago] (480,)
2025-07-31 23:49:55,555 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:49:55,555 INFO sqlalchemy.engine.Engine [cached since 45.48s ago] (3,)
[cached since 45.48s ago] (3,)
2025-07-31 23:49:55,555 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:55,555 INFO sqlalchemy.engine.Engine [cached since 45.48s ago] (434,)
[cached since 45.48s ago] (434,)
2025-07-31 23:49:55,556 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:49:55,556 INFO sqlalchemy.engine.Engine [cached since 45.48s ago] (435,)
[cached since 45.48s ago] (435,)
2025-07-31 23:49:55,557 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.032s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0331, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:49:55.560307Z"}
INFO:     127.0.0.1:63299 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:00.568360Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:00,577 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:00,578 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:00,578 INFO sqlalchemy.engine.Engine [cached since 51.72s ago] (3,)
[cached since 51.72s ago] (3,)
2025-07-31 23:50:00,591 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:00,591 INFO sqlalchemy.engine.Engine [cached since 50.53s ago] (58, 156)
[cached since 50.53s ago] (58, 156)
2025-07-31 23:50:00,595 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:00,595 INFO sqlalchemy.engine.Engine [cached since 50.52s ago] (480,)
[cached since 50.52s ago] (480,)
2025-07-31 23:50:00,600 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:00,600 INFO sqlalchemy.engine.Engine [cached since 50.52s ago] (3,)
[cached since 50.52s ago] (3,)
2025-07-31 23:50:00,601 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:00,601 INFO sqlalchemy.engine.Engine [cached since 50.52s ago] (434,)
[cached since 50.52s ago] (434,)
2025-07-31 23:50:00,602 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:00,602 INFO sqlalchemy.engine.Engine [cached since 50.52s ago] (435,)
[cached since 50.52s ago] (435,)
2025-07-31 23:50:00,603 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.038s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0392, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:00.607566Z"}
INFO:     127.0.0.1:63302 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:05.620103Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:05,630 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:05,631 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:05,631 INFO sqlalchemy.engine.Engine [cached since 56.78s ago] (3,)
[cached since 56.78s ago] (3,)
2025-07-31 23:50:05,642 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:05,642 INFO sqlalchemy.engine.Engine [cached since 55.58s ago] (58, 156)
[cached since 55.58s ago] (58, 156)
2025-07-31 23:50:05,645 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:05,645 INFO sqlalchemy.engine.Engine [cached since 55.57s ago] (480,)
[cached since 55.57s ago] (480,)
2025-07-31 23:50:05,650 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:05,650 INFO sqlalchemy.engine.Engine [cached since 55.57s ago] (3,)
[cached since 55.57s ago] (3,)
2025-07-31 23:50:05,650 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:05,650 INFO sqlalchemy.engine.Engine [cached since 55.57s ago] (434,)
[cached since 55.57s ago] (434,)
2025-07-31 23:50:05,651 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:05,651 INFO sqlalchemy.engine.Engine [cached since 55.57s ago] (435,)
[cached since 55.57s ago] (435,)
2025-07-31 23:50:05,652 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.034s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0346, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:05.654725Z"}
INFO:     127.0.0.1:63305 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:08.941078Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
2025-07-31 23:50:08,947 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:08,947 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:08,947 INFO sqlalchemy.engine.Engine [cached since 60.09s ago] (3,)
[cached since 60.09s ago] (3,)
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:08.948237Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:50:08,955 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:08,955 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:08,955 INFO sqlalchemy.engine.Engine [cached since 60.1s ago] (3,)
[cached since 60.1s ago] (3,)
Email templates loaded successfully
2025-07-31 23:50:08,964 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:50:08,964 INFO sqlalchemy.engine.Engine [cached since 60.09s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 60.09s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:08.965630Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:08.965669Z"}
2025-07-31 23:50:08,965 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:50:08,965 INFO sqlalchemy.engine.Engine [cached since 60.09s ago] ('Test Execution',)
[cached since 60.09s ago] ('Test Execution',)
2025-07-31 23:50:08,967 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:50:08,967 INFO sqlalchemy.engine.Engine [cached since 60.09s ago] (58, 156, 'Test Execution')
[cached since 60.09s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:08.968098Z"}
2025-07-31 23:50:08,968 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:50:08,968 INFO sqlalchemy.engine.Engine [cached since 60.09s ago] (58, 156, 'Test Execution')
[cached since 60.09s ago] (58, 156, 'Test Execution')
2025-07-31 23:50:08,971 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:50:08,973 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:50:08,973 INFO sqlalchemy.engine.Engine [cached since 60.08s ago] (58, 156, 'Test Execution')
[cached since 60.08s ago] (58, 156, 'Test Execution')
Response 200 in 0.033s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0333, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:08.974399Z"}
INFO:     127.0.0.1:63305 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:08.979576Z"}
2025-07-31 23:50:08,979 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.033s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0342, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:08.982433Z"}
INFO:     127.0.0.1:63309 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:10.663743Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:10,675 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:10,675 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:10,675 INFO sqlalchemy.engine.Engine [cached since 61.82s ago] (3,)
[cached since 61.82s ago] (3,)
2025-07-31 23:50:10,690 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:10,691 INFO sqlalchemy.engine.Engine [cached since 60.62s ago] (58, 156)
[cached since 60.62s ago] (58, 156)
2025-07-31 23:50:10,694 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:10,694 INFO sqlalchemy.engine.Engine [cached since 60.62s ago] (480,)
[cached since 60.62s ago] (480,)
2025-07-31 23:50:10,701 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:10,701 INFO sqlalchemy.engine.Engine [cached since 60.62s ago] (3,)
[cached since 60.62s ago] (3,)
2025-07-31 23:50:10,702 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:10,702 INFO sqlalchemy.engine.Engine [cached since 60.62s ago] (434,)
[cached since 60.62s ago] (434,)
2025-07-31 23:50:10,704 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:10,704 INFO sqlalchemy.engine.Engine [cached since 60.62s ago] (435,)
[cached since 60.62s ago] (435,)
2025-07-31 23:50:10,705 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.045s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0464, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:10.710162Z"}
INFO:     127.0.0.1:63305 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:15.723178Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:15,735 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:15,735 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:15,735 INFO sqlalchemy.engine.Engine [cached since 66.88s ago] (3,)
[cached since 66.88s ago] (3,)
2025-07-31 23:50:15,748 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:15,749 INFO sqlalchemy.engine.Engine [cached since 65.68s ago] (58, 156)
[cached since 65.68s ago] (58, 156)
2025-07-31 23:50:15,753 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:15,753 INFO sqlalchemy.engine.Engine [cached since 65.68s ago] (480,)
[cached since 65.68s ago] (480,)
2025-07-31 23:50:15,759 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:15,759 INFO sqlalchemy.engine.Engine [cached since 65.68s ago] (3,)
[cached since 65.68s ago] (3,)
2025-07-31 23:50:15,761 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:15,761 INFO sqlalchemy.engine.Engine [cached since 65.68s ago] (434,)
[cached since 65.68s ago] (434,)
2025-07-31 23:50:15,764 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:15,764 INFO sqlalchemy.engine.Engine [cached since 65.68s ago] (435,)
[cached since 65.68s ago] (435,)
2025-07-31 23:50:15,765 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.045s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0479, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:15.770999Z"}
INFO:     127.0.0.1:63336 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:20.797136Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:20,808 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:20,808 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:20,808 INFO sqlalchemy.engine.Engine [cached since 71.95s ago] (3,)
[cached since 71.95s ago] (3,)
2025-07-31 23:50:20,822 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:20,822 INFO sqlalchemy.engine.Engine [cached since 70.76s ago] (58, 156)
[cached since 70.76s ago] (58, 156)
2025-07-31 23:50:20,827 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:20,827 INFO sqlalchemy.engine.Engine [cached since 70.76s ago] (480,)
[cached since 70.76s ago] (480,)
2025-07-31 23:50:20,832 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:20,832 INFO sqlalchemy.engine.Engine [cached since 70.75s ago] (3,)
[cached since 70.75s ago] (3,)
2025-07-31 23:50:20,833 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:20,833 INFO sqlalchemy.engine.Engine [cached since 70.75s ago] (434,)
[cached since 70.75s ago] (434,)
2025-07-31 23:50:20,835 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:20,835 INFO sqlalchemy.engine.Engine [cached since 70.76s ago] (435,)
[cached since 70.76s ago] (435,)
2025-07-31 23:50:20,836 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.042s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0436, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:20.840744Z"}
INFO:     127.0.0.1:63365 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:25.853476Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:25,864 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:25,865 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:25,865 INFO sqlalchemy.engine.Engine [cached since 77.01s ago] (3,)
[cached since 77.01s ago] (3,)
2025-07-31 23:50:25,878 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:25,878 INFO sqlalchemy.engine.Engine [cached since 75.81s ago] (58, 156)
[cached since 75.81s ago] (58, 156)
2025-07-31 23:50:25,881 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:25,882 INFO sqlalchemy.engine.Engine [cached since 75.81s ago] (480,)
[cached since 75.81s ago] (480,)
2025-07-31 23:50:25,887 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:25,887 INFO sqlalchemy.engine.Engine [cached since 75.81s ago] (3,)
[cached since 75.81s ago] (3,)
2025-07-31 23:50:25,887 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:25,887 INFO sqlalchemy.engine.Engine [cached since 75.81s ago] (434,)
[cached since 75.81s ago] (434,)
2025-07-31 23:50:25,889 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:25,889 INFO sqlalchemy.engine.Engine [cached since 75.81s ago] (435,)
[cached since 75.81s ago] (435,)
2025-07-31 23:50:25,890 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.040s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0411, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:25.894556Z"}
INFO:     127.0.0.1:63387 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:29.951034Z"}
GET http://localhost:8000/api/v1/users/me/permissions from 127.0.0.1
2025-07-31 23:50:29,959 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:29,959 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:29,959 INFO sqlalchemy.engine.Engine [cached since 81.1s ago] (3,)
[cached since 81.1s ago] (3,)
2025-07-31 23:50:29,970 INFO sqlalchemy.engine.Engine SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
2025-07-31 23:50:29,970 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ('Tester',)
[generated in 0.00011s] ('Tester',)
2025-07-31 23:50:29,972 INFO sqlalchemy.engine.Engine SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
2025-07-31 23:50:29,972 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (3,)
[generated in 0.00008s] (3,)
2025-07-31 23:50:29,974 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.026s
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "status_code": 200, "process_time": 0.027, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:29.978017Z"}
INFO:     127.0.0.1:63387 - "GET /api/v1/users/me/permissions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.274484Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.276865Z"}
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.277359Z"}
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.277625Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.277750Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
OPTIONS http://localhost:8000/api/v1/cycle-reports/58/reports/156 from 127.0.0.1
OPTIONS http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
Response 200 in 0.002s
Response 200 in 0.001s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "status_code": 200, "process_time": 0.0055, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.282874Z"}
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "status_code": 200, "process_time": 0.0054, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.282991Z"}
INFO:     127.0.0.1:63400 - "OPTIONS /api/v1/cycle-reports/58/reports/156 HTTP/1.1" 200 OK
INFO:     127.0.0.1:63401 - "OPTIONS /api/v1/test-execution/58/reports/156/submitted-test-cases HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.284055Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.284303Z"}
GET http://localhost:8000/api/v1/cycle-reports/58/reports/156 from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases from 127.0.0.1
2025-07-31 23:50:30,285 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:30,285 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:30,285 INFO sqlalchemy.engine.Engine [cached since 81.43s ago] (3,)
[cached since 81.43s ago] (3,)
2025-07-31 23:50:30,288 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:30,288 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:30,288 INFO sqlalchemy.engine.Engine [cached since 81.43s ago] (3,)
[cached since 81.43s ago] (3,)
2025-07-31 23:50:30,288 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:30,288 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:30,288 INFO sqlalchemy.engine.Engine [cached since 81.43s ago] (3,)
[cached since 81.43s ago] (3,)
2025-07-31 23:50:30,293 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:30,293 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:30,293 INFO sqlalchemy.engine.Engine [cached since 81.44s ago] (3,)
[cached since 81.44s ago] (3,)
2025-07-31 23:50:30,294 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:30,294 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:30,294 INFO sqlalchemy.engine.Engine [cached since 81.44s ago] (3,)
[cached since 81.44s ago] (3,)
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:30.299097Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:30.299336Z"}
2025-07-31 23:50:30,299 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:50:30,299 INFO sqlalchemy.engine.Engine [cached since 81.42s ago] ('Test Execution',)
[cached since 81.42s ago] ('Test Execution',)
2025-07-31 23:50:30,300 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:30,300 INFO sqlalchemy.engine.Engine [cached since 80.23s ago] (58, 156)
[cached since 80.23s ago] (58, 156)
2025-07-31 23:50:30,301 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:50:30,301 INFO sqlalchemy.engine.Engine [cached since 81.42s ago] (58, 156, 'Test Execution')
[cached since 81.42s ago] (58, 156, 'Test Execution')
Email templates loaded successfully
2025-07-31 23:50:30,306 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:50:30,306 INFO sqlalchemy.engine.Engine [cached since 81.43s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 81.43s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
2025-07-31 23:50:30,307 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:30,307 INFO sqlalchemy.engine.Engine [cached since 80.24s ago] (480,)
[cached since 80.24s ago] (480,)
2025-07-31 23:50:30,311 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
2025-07-31 23:50:30,311 INFO sqlalchemy.engine.Engine [generated in 0.00016s] (58, 156, 'Pending Approval', 'Complete')
[generated in 0.00016s] (58, 156, 'Pending Approval', 'Complete')
2025-07-31 23:50:30,313 INFO sqlalchemy.engine.Engine SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
2025-07-31 23:50:30,313 INFO sqlalchemy.engine.Engine [generated in 0.00009s] (58, 156)
[generated in 0.00009s] (58, 156)
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:30.313779Z"}
2025-07-31 23:50:30,313 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:50:30,313 INFO sqlalchemy.engine.Engine [cached since 81.43s ago] (58, 156, 'Test Execution')
[cached since 81.43s ago] (58, 156, 'Test Execution')
2025-07-31 23:50:30,315 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:30,315 INFO sqlalchemy.engine.Engine [cached since 80.24s ago] (3,)
[cached since 80.24s ago] (3,)
2025-07-31 23:50:30,316 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:50:30,316 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:30,316 INFO sqlalchemy.engine.Engine [cached since 80.24s ago] (434,)
[cached since 80.24s ago] (434,)
2025-07-31 23:50:30,317 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:30,317 INFO sqlalchemy.engine.Engine [cached since 80.24s ago] (435,)
[cached since 80.24s ago] (435,)
2025-07-31 23:50:30,318 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.041s
2025-07-31 23:50:30,319 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:50:30,319 INFO sqlalchemy.engine.Engine [cached since 81.43s ago] (58, 156, 'Test Execution')
[cached since 81.43s ago] (58, 156, 'Test Execution')
2025-07-31 23:50:30,320 INFO sqlalchemy.engine.Engine SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
2025-07-31 23:50:30,320 INFO sqlalchemy.engine.Engine [generated in 0.00009s] (400,)
[generated in 0.00009s] (400,)
2025-07-31 23:50:30,321 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:30,321 INFO sqlalchemy.engine.Engine [cached since 81.47s ago] (4,)
[cached since 81.47s ago] (4,)
2025-07-31 23:50:30,322 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0455, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.322336Z"}
INFO:     127.0.0.1:63399 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
Response 200 in 0.041s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0455, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.323246Z"}
INFO:     127.0.0.1:63402 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
Response 200 in 0.039s
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:50:30.324439Z"}
2025-07-31 23:50:30,324 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "status_code": 200, "process_time": 0.041, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.325058Z"}
INFO:     127.0.0.1:63400 - "GET /api/v1/cycle-reports/58/reports/156 HTTP/1.1" 200 OK
2025-07-31 23:50:30,326 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:30,326 INFO sqlalchemy.engine.Engine [generated in 0.00010s] (6,)
[generated in 0.00010s] (6,)
2025-07-31 23:50:30,328 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:50:30,328 INFO sqlalchemy.engine.Engine [generated in 0.00010s] (436, 434, 435, 437)
[generated in 0.00010s] (436, 434, 435, 437)
Response 200 in 0.053s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0546, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.329082Z"}
INFO:     127.0.0.1:63387 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
2025-07-31 23:50:30,334 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:50:30,334 INFO sqlalchemy.engine.Engine [generated in 0.00012s] (436, 434, 435, 437)
[generated in 0.00012s] (436, 434, 435, 437)
2025-07-31 23:50:30,339 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.056s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "status_code": 200, "process_time": 0.0574, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:30.341746Z"}
INFO:     127.0.0.1:63401 - "GET /api/v1/test-execution/58/reports/156/submitted-test-cases HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:35.338404Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:35,344 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:35,344 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:35,344 INFO sqlalchemy.engine.Engine [cached since 86.49s ago] (3,)
[cached since 86.49s ago] (3,)
2025-07-31 23:50:35,353 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:35,353 INFO sqlalchemy.engine.Engine [cached since 85.29s ago] (58, 156)
[cached since 85.29s ago] (58, 156)
2025-07-31 23:50:35,357 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:35,357 INFO sqlalchemy.engine.Engine [cached since 85.28s ago] (480,)
[cached since 85.28s ago] (480,)
2025-07-31 23:50:35,364 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:35,364 INFO sqlalchemy.engine.Engine [cached since 85.29s ago] (3,)
[cached since 85.29s ago] (3,)
2025-07-31 23:50:35,364 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:35,365 INFO sqlalchemy.engine.Engine [cached since 85.29s ago] (434,)
[cached since 85.29s ago] (434,)
2025-07-31 23:50:35,366 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:35,366 INFO sqlalchemy.engine.Engine [cached since 85.29s ago] (435,)
[cached since 85.29s ago] (435,)
2025-07-31 23:50:35,367 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.032s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.033, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:35.371366Z"}
INFO:     127.0.0.1:63401 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:35.673079Z"}
POST http://localhost:8000/api/v1/api/v1/test-execution/executions/23/review from 127.0.0.1
Response 404 in 0.001s
{"method": "POST", "url": "http://localhost:8000/api/v1/api/v1/test-execution/executions/23/review", "status_code": 404, "process_time": 0.0033, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:35.676332Z"}
INFO:     127.0.0.1:63401 - "POST /api/v1/api/v1/test-execution/executions/23/review HTTP/1.1" 404 Not Found
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:40.379889Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:40,392 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:40,392 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:40,392 INFO sqlalchemy.engine.Engine [cached since 91.54s ago] (3,)
[cached since 91.54s ago] (3,)
2025-07-31 23:50:40,407 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:40,407 INFO sqlalchemy.engine.Engine [cached since 90.34s ago] (58, 156)
[cached since 90.34s ago] (58, 156)
2025-07-31 23:50:40,411 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:40,411 INFO sqlalchemy.engine.Engine [cached since 90.34s ago] (480,)
[cached since 90.34s ago] (480,)
2025-07-31 23:50:40,416 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:40,416 INFO sqlalchemy.engine.Engine [cached since 90.34s ago] (3,)
[cached since 90.34s ago] (3,)
2025-07-31 23:50:40,418 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:40,418 INFO sqlalchemy.engine.Engine [cached since 90.34s ago] (434,)
[cached since 90.34s ago] (434,)
2025-07-31 23:50:40,420 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:40,420 INFO sqlalchemy.engine.Engine [cached since 90.34s ago] (435,)
[cached since 90.34s ago] (435,)
2025-07-31 23:50:40,420 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.044s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0452, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:40.425109Z"}
INFO:     127.0.0.1:63401 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:45.439552Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:45,449 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:45,449 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:45,449 INFO sqlalchemy.engine.Engine [cached since 96.59s ago] (3,)
[cached since 96.59s ago] (3,)
2025-07-31 23:50:45,464 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:45,464 INFO sqlalchemy.engine.Engine [cached since 95.4s ago] (58, 156)
[cached since 95.4s ago] (58, 156)
2025-07-31 23:50:45,470 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:45,470 INFO sqlalchemy.engine.Engine [cached since 95.4s ago] (480,)
[cached since 95.4s ago] (480,)
2025-07-31 23:50:45,476 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:45,476 INFO sqlalchemy.engine.Engine [cached since 95.4s ago] (3,)
[cached since 95.4s ago] (3,)
2025-07-31 23:50:45,477 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:45,477 INFO sqlalchemy.engine.Engine [cached since 95.4s ago] (434,)
[cached since 95.4s ago] (434,)
2025-07-31 23:50:45,479 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:45,479 INFO sqlalchemy.engine.Engine [cached since 95.4s ago] (435,)
[cached since 95.4s ago] (435,)
2025-07-31 23:50:45,479 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.043s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0448, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:45.484340Z"}
INFO:     127.0.0.1:63431 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:50.494915Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:50,502 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:50,502 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:50,502 INFO sqlalchemy.engine.Engine [cached since 101.6s ago] (3,)
[cached since 101.6s ago] (3,)
2025-07-31 23:50:50,513 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:50,513 INFO sqlalchemy.engine.Engine [cached since 100.4s ago] (58, 156)
[cached since 100.4s ago] (58, 156)
2025-07-31 23:50:50,517 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:50,517 INFO sqlalchemy.engine.Engine [cached since 100.4s ago] (480,)
[cached since 100.4s ago] (480,)
2025-07-31 23:50:50,522 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:50,522 INFO sqlalchemy.engine.Engine [cached since 100.4s ago] (3,)
[cached since 100.4s ago] (3,)
2025-07-31 23:50:50,523 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:50,523 INFO sqlalchemy.engine.Engine [cached since 100.4s ago] (434,)
[cached since 100.4s ago] (434,)
2025-07-31 23:50:50,524 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:50,524 INFO sqlalchemy.engine.Engine [cached since 100.4s ago] (435,)
[cached since 100.4s ago] (435,)
2025-07-31 23:50:50,525 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.032s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.033, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:50.527879Z"}
INFO:     127.0.0.1:63452 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/auth/login", "client_ip": "127.0.0.1", "user_agent": "curl/8.7.1", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:55.253993Z"}
POST http://localhost:8000/api/v1/auth/login from 127.0.0.1
2025-07-31 23:50:55,262 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:55,262 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-07-31 23:50:55,262 INFO sqlalchemy.engine.Engine [cached since 96.46s ago] ('tester@example.com',)
[cached since 96.46s ago] ('tester@example.com',)
2025-07-31 23:50:55,446 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.196s
{"method": "POST", "url": "http://localhost:8000/api/v1/auth/login", "status_code": 200, "process_time": 0.1969, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:55.450916Z"}
INFO:     127.0.0.1:63462 - "POST /api/v1/auth/login HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/executions/23", "client_ip": "127.0.0.1", "user_agent": "curl/8.7.1", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:55.458881Z"}
GET http://localhost:8000/api/v1/test-execution/executions/23 from 127.0.0.1
Response 405 in 0.001s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/executions/23", "status_code": 405, "process_time": 0.0013, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:55.460130Z"}
INFO:     127.0.0.1:63466 - "GET /api/v1/test-execution/executions/23 HTTP/1.1" 405 Method Not Allowed
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:55.537784Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:50:55,546 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:50:55,546 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:50:55,546 INFO sqlalchemy.engine.Engine [cached since 106.7s ago] (3,)
[cached since 106.7s ago] (3,)
2025-07-31 23:50:55,557 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:50:55,557 INFO sqlalchemy.engine.Engine [cached since 105.5s ago] (58, 156)
[cached since 105.5s ago] (58, 156)
2025-07-31 23:50:55,560 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:50:55,560 INFO sqlalchemy.engine.Engine [cached since 105.5s ago] (480,)
[cached since 105.5s ago] (480,)
2025-07-31 23:50:55,565 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:50:55,565 INFO sqlalchemy.engine.Engine [cached since 105.5s ago] (3,)
[cached since 105.5s ago] (3,)
2025-07-31 23:50:55,566 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:55,566 INFO sqlalchemy.engine.Engine [cached since 105.5s ago] (434,)
[cached since 105.5s ago] (434,)
2025-07-31 23:50:55,567 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:50:55,567 INFO sqlalchemy.engine.Engine [cached since 105.5s ago] (435,)
[cached since 105.5s ago] (435,)
2025-07-31 23:50:55,568 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.033s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0341, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:50:55.571885Z"}
INFO:     127.0.0.1:63468 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:00.329406Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:00.337922Z"}
2025-07-31 23:51:00,338 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:00,338 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:00,338 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] (3,)
[cached since 111.5s ago] (3,)
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:51:00,347 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:00,347 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:00,347 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] (3,)
[cached since 111.5s ago] (3,)
Email templates loaded successfully
2025-07-31 23:51:00,358 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:51:00,358 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 111.5s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:00.359617Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:00.359675Z"}
2025-07-31 23:51:00,359 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:51:00,359 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] ('Test Execution',)
[cached since 111.5s ago] ('Test Execution',)
2025-07-31 23:51:00,361 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:51:00,361 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] (58, 156, 'Test Execution')
[cached since 111.5s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:00.362654Z"}
2025-07-31 23:51:00,362 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:51:00,362 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] (58, 156, 'Test Execution')
[cached since 111.5s ago] (58, 156, 'Test Execution')
2025-07-31 23:51:00,365 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:51:00,367 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:51:00,367 INFO sqlalchemy.engine.Engine [cached since 111.5s ago] (58, 156, 'Test Execution')
[cached since 111.5s ago] (58, 156, 'Test Execution')
Response 200 in 0.038s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0395, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:00.368924Z"}
INFO:     127.0.0.1:63468 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:00.372259Z"}
2025-07-31 23:51:00,372 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.036s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0375, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:00.375405Z"}
INFO:     127.0.0.1:63488 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:00.581977Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:00,593 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:00,593 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:00,593 INFO sqlalchemy.engine.Engine [cached since 111.7s ago] (3,)
[cached since 111.7s ago] (3,)
2025-07-31 23:51:00,606 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:00,607 INFO sqlalchemy.engine.Engine [cached since 110.5s ago] (58, 156)
[cached since 110.5s ago] (58, 156)
2025-07-31 23:51:00,611 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:00,611 INFO sqlalchemy.engine.Engine [cached since 110.5s ago] (480,)
[cached since 110.5s ago] (480,)
2025-07-31 23:51:00,617 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:00,617 INFO sqlalchemy.engine.Engine [cached since 110.5s ago] (3,)
[cached since 110.5s ago] (3,)
2025-07-31 23:51:00,619 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:00,619 INFO sqlalchemy.engine.Engine [cached since 110.5s ago] (434,)
[cached since 110.5s ago] (434,)
2025-07-31 23:51:00,622 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:00,622 INFO sqlalchemy.engine.Engine [cached since 110.5s ago] (435,)
[cached since 110.5s ago] (435,)
2025-07-31 23:51:00,624 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.046s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0481, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:00.630060Z"}
INFO:     127.0.0.1:63468 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:05.641499Z"}
OPTIONS http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
Response 200 in 0.000s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0021, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:05.643539Z"}
INFO:     127.0.0.1:63508 - "OPTIONS /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:05.646142Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:05,656 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:05,656 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:05,656 INFO sqlalchemy.engine.Engine [cached since 116.8s ago] (3,)
[cached since 116.8s ago] (3,)
2025-07-31 23:51:05,668 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:05,668 INFO sqlalchemy.engine.Engine [cached since 115.6s ago] (58, 156)
[cached since 115.6s ago] (58, 156)
2025-07-31 23:51:05,671 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:05,671 INFO sqlalchemy.engine.Engine [cached since 115.6s ago] (480,)
[cached since 115.6s ago] (480,)
2025-07-31 23:51:05,675 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:05,675 INFO sqlalchemy.engine.Engine [cached since 115.6s ago] (3,)
[cached since 115.6s ago] (3,)
2025-07-31 23:51:05,676 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:05,676 INFO sqlalchemy.engine.Engine [cached since 115.6s ago] (434,)
[cached since 115.6s ago] (434,)
2025-07-31 23:51:05,677 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:05,677 INFO sqlalchemy.engine.Engine [cached since 115.6s ago] (435,)
[cached since 115.6s ago] (435,)
2025-07-31 23:51:05,677 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.034s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0352, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:05.681299Z"}
INFO:     127.0.0.1:63508 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:10.693922Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:10,707 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:10,708 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:10,708 INFO sqlalchemy.engine.Engine [cached since 121.9s ago] (3,)
[cached since 121.9s ago] (3,)
2025-07-31 23:51:10,721 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:10,722 INFO sqlalchemy.engine.Engine [cached since 120.7s ago] (58, 156)
[cached since 120.7s ago] (58, 156)
2025-07-31 23:51:10,726 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:10,727 INFO sqlalchemy.engine.Engine [cached since 120.7s ago] (480,)
[cached since 120.7s ago] (480,)
2025-07-31 23:51:10,733 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:10,733 INFO sqlalchemy.engine.Engine [cached since 120.7s ago] (3,)
[cached since 120.7s ago] (3,)
2025-07-31 23:51:10,734 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:10,734 INFO sqlalchemy.engine.Engine [cached since 120.7s ago] (434,)
[cached since 120.7s ago] (434,)
2025-07-31 23:51:10,737 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:10,737 INFO sqlalchemy.engine.Engine [cached since 120.7s ago] (435,)
[cached since 120.7s ago] (435,)
2025-07-31 23:51:10,740 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.051s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0538, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:10.747657Z"}
INFO:     127.0.0.1:63534 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:15.761490Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:15,774 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:15,774 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:15,774 INFO sqlalchemy.engine.Engine [cached since 126.9s ago] (3,)
[cached since 126.9s ago] (3,)
2025-07-31 23:51:15,790 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:15,790 INFO sqlalchemy.engine.Engine [cached since 125.7s ago] (58, 156)
[cached since 125.7s ago] (58, 156)
2025-07-31 23:51:15,797 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:15,797 INFO sqlalchemy.engine.Engine [cached since 125.7s ago] (480,)
[cached since 125.7s ago] (480,)
2025-07-31 23:51:15,805 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:15,805 INFO sqlalchemy.engine.Engine [cached since 125.7s ago] (3,)
[cached since 125.7s ago] (3,)
2025-07-31 23:51:15,807 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:15,807 INFO sqlalchemy.engine.Engine [cached since 125.7s ago] (434,)
[cached since 125.7s ago] (434,)
2025-07-31 23:51:15,810 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:15,811 INFO sqlalchemy.engine.Engine [cached since 125.7s ago] (435,)
[cached since 125.7s ago] (435,)
2025-07-31 23:51:15,812 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.055s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0583, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:15.819677Z"}
INFO:     127.0.0.1:63567 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:20.830270Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:20,835 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:20,835 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:20,835 INFO sqlalchemy.engine.Engine [cached since 132s ago] (3,)
[cached since 132s ago] (3,)
2025-07-31 23:51:20,843 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:20,843 INFO sqlalchemy.engine.Engine [cached since 130.8s ago] (58, 156)
[cached since 130.8s ago] (58, 156)
2025-07-31 23:51:20,845 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:20,845 INFO sqlalchemy.engine.Engine [cached since 130.8s ago] (480,)
[cached since 130.8s ago] (480,)
2025-07-31 23:51:20,848 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:20,848 INFO sqlalchemy.engine.Engine [cached since 130.8s ago] (3,)
[cached since 130.8s ago] (3,)
2025-07-31 23:51:20,849 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:20,849 INFO sqlalchemy.engine.Engine [cached since 130.8s ago] (434,)
[cached since 130.8s ago] (434,)
2025-07-31 23:51:20,849 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:20,849 INFO sqlalchemy.engine.Engine [cached since 130.8s ago] (435,)
[cached since 130.8s ago] (435,)
2025-07-31 23:51:20,850 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.021s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0222, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:20.852483Z"}
INFO:     127.0.0.1:63575 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:25.865552Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:25,878 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:25,878 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:25,878 INFO sqlalchemy.engine.Engine [cached since 137s ago] (3,)
[cached since 137s ago] (3,)
2025-07-31 23:51:25,895 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:25,895 INFO sqlalchemy.engine.Engine [cached since 135.8s ago] (58, 156)
[cached since 135.8s ago] (58, 156)
2025-07-31 23:51:25,900 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:25,900 INFO sqlalchemy.engine.Engine [cached since 135.8s ago] (480,)
[cached since 135.8s ago] (480,)
2025-07-31 23:51:25,907 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:25,907 INFO sqlalchemy.engine.Engine [cached since 135.8s ago] (3,)
[cached since 135.8s ago] (3,)
2025-07-31 23:51:25,908 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:25,908 INFO sqlalchemy.engine.Engine [cached since 135.8s ago] (434,)
[cached since 135.8s ago] (434,)
2025-07-31 23:51:25,910 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:25,910 INFO sqlalchemy.engine.Engine [cached since 135.8s ago] (435,)
[cached since 135.8s ago] (435,)
2025-07-31 23:51:25,910 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.049s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0509, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:25.916508Z"}
INFO:     127.0.0.1:63614 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:30.382536Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:30.384645Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:51:30,401 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:30,402 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:30,402 INFO sqlalchemy.engine.Engine [cached since 141.5s ago] (3,)
[cached since 141.5s ago] (3,)
2025-07-31 23:51:30,402 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:30,402 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:30,402 INFO sqlalchemy.engine.Engine [cached since 141.5s ago] (3,)
[cached since 141.5s ago] (3,)
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:30.419141Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:30.419261Z"}
2025-07-31 23:51:30,419 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:51:30,419 INFO sqlalchemy.engine.Engine [cached since 141.5s ago] ('Test Execution',)
[cached since 141.5s ago] ('Test Execution',)
Email templates loaded successfully
2025-07-31 23:51:30,429 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:51:30,429 INFO sqlalchemy.engine.Engine [cached since 141.6s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 141.6s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
2025-07-31 23:51:30,431 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:51:30,431 INFO sqlalchemy.engine.Engine [cached since 141.6s ago] (58, 156, 'Test Execution')
[cached since 141.6s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:30.433525Z"}
2025-07-31 23:51:30,433 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:51:30,433 INFO sqlalchemy.engine.Engine [cached since 141.6s ago] (58, 156, 'Test Execution')
[cached since 141.6s ago] (58, 156, 'Test Execution')
2025-07-31 23:51:30,438 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:51:30,440 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:51:30,440 INFO sqlalchemy.engine.Engine [cached since 141.6s ago] (58, 156, 'Test Execution')
[cached since 141.6s ago] (58, 156, 'Test Execution')
Response 200 in 0.056s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0605, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:30.442955Z"}
INFO:     127.0.0.1:63614 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:51:30.446203Z"}
2025-07-31 23:51:30,446 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.059s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.066, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:30.450666Z"}
INFO:     127.0.0.1:63616 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:30.947190Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:30,956 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:30,957 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:30,957 INFO sqlalchemy.engine.Engine [cached since 142.1s ago] (3,)
[cached since 142.1s ago] (3,)
2025-07-31 23:51:30,971 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:30,971 INFO sqlalchemy.engine.Engine [cached since 140.9s ago] (58, 156)
[cached since 140.9s ago] (58, 156)
2025-07-31 23:51:30,974 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:30,974 INFO sqlalchemy.engine.Engine [cached since 140.9s ago] (480,)
[cached since 140.9s ago] (480,)
2025-07-31 23:51:30,979 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:30,979 INFO sqlalchemy.engine.Engine [cached since 140.9s ago] (3,)
[cached since 140.9s ago] (3,)
2025-07-31 23:51:30,979 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:30,979 INFO sqlalchemy.engine.Engine [cached since 140.9s ago] (434,)
[cached since 140.9s ago] (434,)
2025-07-31 23:51:30,980 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:30,980 INFO sqlalchemy.engine.Engine [cached since 140.9s ago] (435,)
[cached since 140.9s ago] (435,)
2025-07-31 23:51:30,981 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.037s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0378, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:30.984931Z"}
INFO:     127.0.0.1:63614 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:35.994526Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:36,004 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:36,004 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:36,004 INFO sqlalchemy.engine.Engine [cached since 147.1s ago] (3,)
[cached since 147.1s ago] (3,)
2025-07-31 23:51:36,016 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:36,016 INFO sqlalchemy.engine.Engine [cached since 146s ago] (58, 156)
[cached since 146s ago] (58, 156)
2025-07-31 23:51:36,020 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:36,020 INFO sqlalchemy.engine.Engine [cached since 145.9s ago] (480,)
[cached since 145.9s ago] (480,)
2025-07-31 23:51:36,027 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:36,027 INFO sqlalchemy.engine.Engine [cached since 145.9s ago] (3,)
[cached since 145.9s ago] (3,)
2025-07-31 23:51:36,028 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:36,028 INFO sqlalchemy.engine.Engine [cached since 145.9s ago] (434,)
[cached since 145.9s ago] (434,)
2025-07-31 23:51:36,029 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:36,029 INFO sqlalchemy.engine.Engine [cached since 145.9s ago] (435,)
[cached since 145.9s ago] (435,)
2025-07-31 23:51:36,030 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.038s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0393, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:36.033819Z"}
INFO:     127.0.0.1:63621 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'test_duplicate_review.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
{"event": "Database connections closed", "logger": "app.core.database", "level": "info", "timestamp": "2025-08-01T03:51:37.369262Z"}
{"event": "Shutting down SynapseDT application", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:37.369315Z"}
INFO:     Application shutdown complete.
INFO:     Finished server process [59825]
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'orm_mode' has been renamed to 'from_attributes'
  warnings.warn(message, UserWarning)
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
Security middleware configured successfully
INFO:     Started server process [60400]
INFO:     Waiting for application startup.
{"event": "Starting SynapseDT application - Clean Architecture Edition", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:39.309336Z"}
2025-07-31 23:51:39,316 INFO sqlalchemy.engine.Engine select pg_catalog.version()
select pg_catalog.version()
2025-07-31 23:51:39,316 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:51:39,317 INFO sqlalchemy.engine.Engine select current_schema()
select current_schema()
2025-07-31 23:51:39,317 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:51:39,317 INFO sqlalchemy.engine.Engine show standard_conforming_strings
show standard_conforming_strings
2025-07-31 23:51:39,317 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:51:39,317 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:39,318 INFO sqlalchemy.engine.Engine SELECT 1
SELECT 1
2025-07-31 23:51:39,318 INFO sqlalchemy.engine.Engine [generated in 0.00004s] ()
[generated in 0.00004s] ()
2025-07-31 23:51:39,318 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"event": "Database connection verified", "logger": "app.core.database", "level": "info", "timestamp": "2025-08-01T03:51:39.322051Z"}
{"event": "Job manager initialized with 195 jobs", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:39.322099Z"}
{"event": "Clean architecture dependencies initialized", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:39.322119Z"}
Connected to Temporal server
{"event": "Temporal client initialized and connected", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:39.327602Z"}
{"event": "Application startup complete", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:39.327636Z"}
INFO:     Application startup complete.
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.045772Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:41,053 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:41,218 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:41,218 INFO sqlalchemy.engine.Engine [generated in 0.00013s] (3,)
[generated in 0.00013s] (3,)
{"method": "POST", "url": "http://localhost:8000/api/v1/auth/login", "client_ip": "127.0.0.1", "user_agent": "python-requests/2.32.4", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.218659Z"}
POST http://localhost:8000/api/v1/auth/login from 127.0.0.1
2025-07-31 23:51:41,239 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:41,240 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-07-31 23:51:41,240 INFO sqlalchemy.engine.Engine [generated in 0.00009s] ('tester@example.com',)
[generated in 0.00009s] ('tester@example.com',)
2025-07-31 23:51:41,246 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:41,246 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (58, 156)
[generated in 0.00008s] (58, 156)
2025-07-31 23:51:41,250 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:41,250 INFO sqlalchemy.engine.Engine [generated in 0.00010s] (480,)
[generated in 0.00010s] (480,)
(trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-07-31 23:51:41,436 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:51:41,439 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:41,439 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (3,)
[generated in 0.00008s] (3,)
2025-07-31 23:51:41,440 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:41,440 INFO sqlalchemy.engine.Engine [generated in 0.00004s] (434,)
[generated in 0.00004s] (434,)
Response 200 in 0.221s
{"method": "POST", "url": "http://localhost:8000/api/v1/auth/login", "status_code": 200, "process_time": 0.2226, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.441248Z"}
INFO:     127.0.0.1:63653 - "POST /api/v1/auth/login HTTP/1.1" 200 OK
2025-07-31 23:51:41,442 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:41,442 INFO sqlalchemy.engine.Engine [cached since 0.002402s ago] (435,)
[cached since 0.002402s ago] (435,)
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "python-requests/2.32.4", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.442984Z"}
2025-07-31 23:51:41,443 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
POST http://localhost:8000/api/v1/test-execution/executions/23/review from 127.0.0.1
Response 200 in 0.400s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.4016, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.447394Z"}
INFO:     127.0.0.1:63649 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
2025-07-31 23:51:41,452 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:41,452 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:41,452 INFO sqlalchemy.engine.Engine [cached since 0.234s ago] (3,)
[cached since 0.234s ago] (3,)
Claude provider initialized with model: claude-3-5-sonnet-20241022
Claude provider initialized successfully
Gemini provider skipped - using Claude only for LLM calls
Hybrid LLM service initialized with providers: ['claude']
Hybrid analysis enabled: True
Failover enabled with max failures: 3
2025-07-31 23:51:41,482 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:51:41,482 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (23,)
[generated in 0.00007s] (23,)
2025-07-31 23:51:41,484 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:51:41,484 INFO sqlalchemy.engine.Engine [generated in 0.00005s] (23,)
[generated in 0.00005s] (23,)
2025-07-31 23:51:41,486 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
2025-07-31 23:51:41,486 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (23, 480, <ReviewStatus.REJECTED: 'rejected'>, 'Changing to rejected', None, None, None, None, None, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', True, 'Found issues', False, None, 3, 3, 3)
[generated in 0.00008s] (23, 480, <ReviewStatus.REJECTED: 'rejected'>, 'Changing to rejected', None, None, None, None, None, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', True, 'Found issues', False, None, 3, 3, 3)
2025-07-31 23:51:41,489 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:51:41,500 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:41,501 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
2025-07-31 23:51:41,501 INFO sqlalchemy.engine.Engine [generated in 0.00005s] (7,)
[generated in 0.00005s] (7,)
2025-07-31 23:51:41,503 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
2025-07-31 23:51:41,503 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (23, 'reviewed', '{"review_status": "rejected", "overall_score": 0.0, "requires_retest": true}', 3, None, None, None)
[generated in 0.00007s] (23, 'reviewed', '{"review_status": "rejected", "overall_score": 0.0, "requires_retest": true}', 3, None, None, None)
2025-07-31 23:51:41,507 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.068s
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "status_code": 200, "process_time": 0.0688, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.511772Z"}
INFO:     127.0.0.1:63656 - "POST /api/v1/test-execution/executions/23/review HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "python-requests/2.32.4", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.513250Z"}
GET http://localhost:8000/api/v1/test-execution/executions/23/review from 127.0.0.1
2025-07-31 23:51:41,519 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:41,520 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:41,520 INFO sqlalchemy.engine.Engine [cached since 0.3019s ago] (3,)
[cached since 0.3019s ago] (3,)
2025-07-31 23:51:41,532 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.execution_id = $1::INTEGER ORDER BY cycle_report_test_execution_reviews.reviewed_at DESC 
 LIMIT $2::INTEGER
SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.execution_id = $1::INTEGER ORDER BY cycle_report_test_execution_reviews.reviewed_at DESC 
 LIMIT $2::INTEGER
2025-07-31 23:51:41,532 INFO sqlalchemy.engine.Engine [generated in 0.00006s] (23, 1)
[generated in 0.00006s] (23, 1)
2025-07-31 23:51:41,534 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.023s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "status_code": 200, "process_time": 0.024, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:41.537231Z"}
INFO:     127.0.0.1:63660 - "GET /api/v1/test-execution/executions/23/review HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:46.464108Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:46,474 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:46,474 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:46,474 INFO sqlalchemy.engine.Engine [cached since 5.256s ago] (3,)
[cached since 5.256s ago] (3,)
2025-07-31 23:51:46,489 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:46,489 INFO sqlalchemy.engine.Engine [cached since 5.243s ago] (58, 156)
[cached since 5.243s ago] (58, 156)
2025-07-31 23:51:46,492 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:46,493 INFO sqlalchemy.engine.Engine [cached since 5.243s ago] (480,)
[cached since 5.243s ago] (480,)
2025-07-31 23:51:46,498 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:46,498 INFO sqlalchemy.engine.Engine [cached since 5.059s ago] (3,)
[cached since 5.059s ago] (3,)
2025-07-31 23:51:46,498 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:46,498 INFO sqlalchemy.engine.Engine [cached since 5.058s ago] (434,)
[cached since 5.058s ago] (434,)
2025-07-31 23:51:46,500 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:46,500 INFO sqlalchemy.engine.Engine [cached since 5.06s ago] (435,)
[cached since 5.06s ago] (435,)
2025-07-31 23:51:46,501 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.040s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0409, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:46.505033Z"}
INFO:     127.0.0.1:63680 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:51.518977Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:51,530 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:51,531 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:51,531 INFO sqlalchemy.engine.Engine [cached since 10.31s ago] (3,)
[cached since 10.31s ago] (3,)
2025-07-31 23:51:51,546 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:51,546 INFO sqlalchemy.engine.Engine [cached since 10.3s ago] (58, 156)
[cached since 10.3s ago] (58, 156)
2025-07-31 23:51:51,550 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:51,550 INFO sqlalchemy.engine.Engine [cached since 10.3s ago] (480,)
[cached since 10.3s ago] (480,)
2025-07-31 23:51:51,555 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:51,555 INFO sqlalchemy.engine.Engine [cached since 10.12s ago] (3,)
[cached since 10.12s ago] (3,)
2025-07-31 23:51:51,556 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:51,556 INFO sqlalchemy.engine.Engine [cached since 10.12s ago] (434,)
[cached since 10.12s ago] (434,)
2025-07-31 23:51:51,558 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:51,558 INFO sqlalchemy.engine.Engine [cached since 10.12s ago] (435,)
[cached since 10.12s ago] (435,)
2025-07-31 23:51:51,559 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.042s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0436, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:51.562519Z"}
INFO:     127.0.0.1:63684 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:56.571660Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:51:56,579 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:51:56,579 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:51:56,579 INFO sqlalchemy.engine.Engine [cached since 15.36s ago] (3,)
[cached since 15.36s ago] (3,)
2025-07-31 23:51:56,590 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:51:56,590 INFO sqlalchemy.engine.Engine [cached since 15.34s ago] (58, 156)
[cached since 15.34s ago] (58, 156)
2025-07-31 23:51:56,592 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:51:56,592 INFO sqlalchemy.engine.Engine [cached since 15.34s ago] (480,)
[cached since 15.34s ago] (480,)
2025-07-31 23:51:56,596 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:51:56,596 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (3,)
[cached since 15.16s ago] (3,)
2025-07-31 23:51:56,597 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:56,597 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (434,)
[cached since 15.16s ago] (434,)
2025-07-31 23:51:56,598 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:51:56,598 INFO sqlalchemy.engine.Engine [cached since 15.16s ago] (435,)
[cached since 15.16s ago] (435,)
2025-07-31 23:51:56,598 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.029s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0296, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:51:56.601231Z"}
INFO:     127.0.0.1:63688 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:00.453365Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:00.457300Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:52:00,464 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:00,464 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:00,464 INFO sqlalchemy.engine.Engine [cached since 19.25s ago] (3,)
[cached since 19.25s ago] (3,)
2025-07-31 23:52:00,465 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:00,465 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:00,465 INFO sqlalchemy.engine.Engine [cached since 19.25s ago] (3,)
[cached since 19.25s ago] (3,)
Email templates loaded successfully
2025-07-31 23:52:00,487 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:52:00,487 INFO sqlalchemy.engine.Engine [generated in 0.00018s] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[generated in 0.00018s] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:00.487456Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:00.487506Z"}
2025-07-31 23:52:00,488 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:52:00,488 INFO sqlalchemy.engine.Engine [generated in 0.00007s] ('Test Execution',)
[generated in 0.00007s] ('Test Execution',)
2025-07-31 23:52:00,491 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:52:00,492 INFO sqlalchemy.engine.Engine [generated in 0.00012s] (58, 156, 'Test Execution')
[generated in 0.00012s] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:00.493274Z"}
2025-07-31 23:52:00,493 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:52:00,493 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (58, 156, 'Test Execution')
[generated in 0.00007s] (58, 156, 'Test Execution')
2025-07-31 23:52:00,495 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.045s
2025-07-31 23:52:00,500 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:52:00,500 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (58, 156, 'Test Execution')
[generated in 0.00008s] (58, 156, 'Test Execution')
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0472, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:00.500583Z"}
INFO:     127.0.0.1:63688 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:00.505627Z"}
2025-07-31 23:52:00,505 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.051s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0515, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:00.508830Z"}
INFO:     127.0.0.1:63690 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:01.610816Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:01,622 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:01,622 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:01,622 INFO sqlalchemy.engine.Engine [cached since 20.4s ago] (3,)
[cached since 20.4s ago] (3,)
2025-07-31 23:52:01,636 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:01,636 INFO sqlalchemy.engine.Engine [cached since 20.39s ago] (58, 156)
[cached since 20.39s ago] (58, 156)
2025-07-31 23:52:01,640 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:01,641 INFO sqlalchemy.engine.Engine [cached since 20.39s ago] (480,)
[cached since 20.39s ago] (480,)
2025-07-31 23:52:01,646 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:01,646 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (3,)
[cached since 20.21s ago] (3,)
2025-07-31 23:52:01,647 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:01,647 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (434,)
[cached since 20.21s ago] (434,)
2025-07-31 23:52:01,649 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:01,650 INFO sqlalchemy.engine.Engine [cached since 20.21s ago] (435,)
[cached since 20.21s ago] (435,)
2025-07-31 23:52:01,650 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.043s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0448, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:01.655585Z"}
INFO:     127.0.0.1:63688 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:06.671314Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:06,684 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:06,684 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:06,684 INFO sqlalchemy.engine.Engine [cached since 25.47s ago] (3,)
[cached since 25.47s ago] (3,)
2025-07-31 23:52:06,697 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:06,697 INFO sqlalchemy.engine.Engine [cached since 25.45s ago] (58, 156)
[cached since 25.45s ago] (58, 156)
2025-07-31 23:52:06,701 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:06,701 INFO sqlalchemy.engine.Engine [cached since 25.45s ago] (480,)
[cached since 25.45s ago] (480,)
2025-07-31 23:52:06,707 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:06,707 INFO sqlalchemy.engine.Engine [cached since 25.27s ago] (3,)
[cached since 25.27s ago] (3,)
2025-07-31 23:52:06,708 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:06,708 INFO sqlalchemy.engine.Engine [cached since 25.27s ago] (434,)
[cached since 25.27s ago] (434,)
2025-07-31 23:52:06,710 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:06,710 INFO sqlalchemy.engine.Engine [cached since 25.27s ago] (435,)
[cached since 25.27s ago] (435,)
2025-07-31 23:52:06,711 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.043s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.046, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:06.717205Z"}
INFO:     127.0.0.1:63695 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:11.723940Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:11,732 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:11,732 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:11,732 INFO sqlalchemy.engine.Engine [cached since 30.51s ago] (3,)
[cached since 30.51s ago] (3,)
2025-07-31 23:52:11,745 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:11,745 INFO sqlalchemy.engine.Engine [cached since 30.5s ago] (58, 156)
[cached since 30.5s ago] (58, 156)
2025-07-31 23:52:11,748 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:11,749 INFO sqlalchemy.engine.Engine [cached since 30.5s ago] (480,)
[cached since 30.5s ago] (480,)
2025-07-31 23:52:11,754 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:11,754 INFO sqlalchemy.engine.Engine [cached since 30.32s ago] (3,)
[cached since 30.32s ago] (3,)
2025-07-31 23:52:11,757 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:11,757 INFO sqlalchemy.engine.Engine [cached since 30.32s ago] (434,)
[cached since 30.32s ago] (434,)
2025-07-31 23:52:11,758 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:11,758 INFO sqlalchemy.engine.Engine [cached since 30.32s ago] (435,)
[cached since 30.32s ago] (435,)
2025-07-31 23:52:11,759 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.038s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0391, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:11.763015Z"}
INFO:     127.0.0.1:63698 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:16.771452Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:16,779 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:16,779 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:16,779 INFO sqlalchemy.engine.Engine [cached since 35.56s ago] (3,)
[cached since 35.56s ago] (3,)
2025-07-31 23:52:16,790 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:16,790 INFO sqlalchemy.engine.Engine [cached since 35.54s ago] (58, 156)
[cached since 35.54s ago] (58, 156)
2025-07-31 23:52:16,793 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:16,793 INFO sqlalchemy.engine.Engine [cached since 35.54s ago] (480,)
[cached since 35.54s ago] (480,)
2025-07-31 23:52:16,797 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:16,797 INFO sqlalchemy.engine.Engine [cached since 35.36s ago] (3,)
[cached since 35.36s ago] (3,)
2025-07-31 23:52:16,798 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:16,798 INFO sqlalchemy.engine.Engine [cached since 35.36s ago] (434,)
[cached since 35.36s ago] (434,)
2025-07-31 23:52:16,799 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:16,799 INFO sqlalchemy.engine.Engine [cached since 35.36s ago] (435,)
[cached since 35.36s ago] (435,)
2025-07-31 23:52:16,799 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.031s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0317, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:16.803117Z"}
INFO:     127.0.0.1:63708 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:21.814366Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:21,824 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:21,824 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:21,824 INFO sqlalchemy.engine.Engine [cached since 40.61s ago] (3,)
[cached since 40.61s ago] (3,)
2025-07-31 23:52:21,840 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:21,840 INFO sqlalchemy.engine.Engine [cached since 40.59s ago] (58, 156)
[cached since 40.59s ago] (58, 156)
2025-07-31 23:52:21,844 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:21,844 INFO sqlalchemy.engine.Engine [cached since 40.59s ago] (480,)
[cached since 40.59s ago] (480,)
2025-07-31 23:52:21,850 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:21,850 INFO sqlalchemy.engine.Engine [cached since 40.41s ago] (3,)
[cached since 40.41s ago] (3,)
2025-07-31 23:52:21,851 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:21,851 INFO sqlalchemy.engine.Engine [cached since 40.41s ago] (434,)
[cached since 40.41s ago] (434,)
2025-07-31 23:52:21,852 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:21,853 INFO sqlalchemy.engine.Engine [cached since 40.41s ago] (435,)
[cached since 40.41s ago] (435,)
2025-07-31 23:52:21,853 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.042s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0433, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:21.857613Z"}
INFO:     127.0.0.1:63716 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:26.870411Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:26,880 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:26,880 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:26,880 INFO sqlalchemy.engine.Engine [cached since 45.66s ago] (3,)
[cached since 45.66s ago] (3,)
2025-07-31 23:52:26,895 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:26,895 INFO sqlalchemy.engine.Engine [cached since 45.65s ago] (58, 156)
[cached since 45.65s ago] (58, 156)
2025-07-31 23:52:26,900 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:26,900 INFO sqlalchemy.engine.Engine [cached since 45.65s ago] (480,)
[cached since 45.65s ago] (480,)
2025-07-31 23:52:26,906 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:26,906 INFO sqlalchemy.engine.Engine [cached since 45.47s ago] (3,)
[cached since 45.47s ago] (3,)
2025-07-31 23:52:26,907 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:26,907 INFO sqlalchemy.engine.Engine [cached since 45.47s ago] (434,)
[cached since 45.47s ago] (434,)
2025-07-31 23:52:26,909 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:26,909 INFO sqlalchemy.engine.Engine [cached since 45.47s ago] (435,)
[cached since 45.47s ago] (435,)
2025-07-31 23:52:26,910 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.043s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0448, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:26.915170Z"}
INFO:     127.0.0.1:63724 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:30.511553Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:30.516222Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:52:30,520 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:30,520 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:30,520 INFO sqlalchemy.engine.Engine [cached since 49.3s ago] (3,)
[cached since 49.3s ago] (3,)
2025-07-31 23:52:30,524 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:30,524 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:30,524 INFO sqlalchemy.engine.Engine [cached since 49.31s ago] (3,)
[cached since 49.31s ago] (3,)
Email templates loaded successfully
2025-07-31 23:52:30,539 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:52:30,539 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 30.05s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:30.540597Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:30.540649Z"}
2025-07-31 23:52:30,540 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:52:30,540 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] ('Test Execution',)
[cached since 30.05s ago] ('Test Execution',)
2025-07-31 23:52:30,542 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:52:30,542 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] (58, 156, 'Test Execution')
[cached since 30.05s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:30.544357Z"}
2025-07-31 23:52:30,544 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:52:30,544 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] (58, 156, 'Test Execution')
[cached since 30.05s ago] (58, 156, 'Test Execution')
2025-07-31 23:52:30,547 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:52:30,550 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:52:30,550 INFO sqlalchemy.engine.Engine [cached since 30.05s ago] (58, 156, 'Test Execution')
[cached since 30.05s ago] (58, 156, 'Test Execution')
Response 200 in 0.039s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0395, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:30.551065Z"}
INFO:     127.0.0.1:63724 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:52:30.555656Z"}
2025-07-31 23:52:30,555 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.042s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0427, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:30.558918Z"}
INFO:     127.0.0.1:63731 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:31.927324Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:31,941 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:31,942 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:31,942 INFO sqlalchemy.engine.Engine [cached since 50.72s ago] (3,)
[cached since 50.72s ago] (3,)
2025-07-31 23:52:31,956 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:31,956 INFO sqlalchemy.engine.Engine [cached since 50.71s ago] (58, 156)
[cached since 50.71s ago] (58, 156)
2025-07-31 23:52:31,960 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:31,960 INFO sqlalchemy.engine.Engine [cached since 50.71s ago] (480,)
[cached since 50.71s ago] (480,)
2025-07-31 23:52:31,965 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:31,965 INFO sqlalchemy.engine.Engine [cached since 50.53s ago] (3,)
[cached since 50.53s ago] (3,)
2025-07-31 23:52:31,966 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:31,966 INFO sqlalchemy.engine.Engine [cached since 50.53s ago] (434,)
[cached since 50.53s ago] (434,)
2025-07-31 23:52:31,967 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:31,968 INFO sqlalchemy.engine.Engine [cached since 50.53s ago] (435,)
[cached since 50.53s ago] (435,)
2025-07-31 23:52:31,968 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.044s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0461, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:31.973362Z"}
INFO:     127.0.0.1:63724 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:36.989849Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:37,002 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:37,002 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:37,002 INFO sqlalchemy.engine.Engine [cached since 55.78s ago] (3,)
[cached since 55.78s ago] (3,)
2025-07-31 23:52:37,018 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:37,018 INFO sqlalchemy.engine.Engine [cached since 55.77s ago] (58, 156)
[cached since 55.77s ago] (58, 156)
2025-07-31 23:52:37,022 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:37,022 INFO sqlalchemy.engine.Engine [cached since 55.77s ago] (480,)
[cached since 55.77s ago] (480,)
2025-07-31 23:52:37,031 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:37,032 INFO sqlalchemy.engine.Engine [cached since 55.59s ago] (3,)
[cached since 55.59s ago] (3,)
2025-07-31 23:52:37,033 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:37,033 INFO sqlalchemy.engine.Engine [cached since 55.59s ago] (434,)
[cached since 55.59s ago] (434,)
2025-07-31 23:52:37,035 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:37,035 INFO sqlalchemy.engine.Engine [cached since 55.6s ago] (435,)
[cached since 55.6s ago] (435,)
2025-07-31 23:52:37,036 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.051s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0526, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:37.042435Z"}
INFO:     127.0.0.1:63780 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:42.052676Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:42,059 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:42,059 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:42,059 INFO sqlalchemy.engine.Engine [cached since 60.84s ago] (3,)
[cached since 60.84s ago] (3,)
2025-07-31 23:52:42,069 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:42,069 INFO sqlalchemy.engine.Engine [cached since 60.82s ago] (58, 156)
[cached since 60.82s ago] (58, 156)
2025-07-31 23:52:42,072 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:42,072 INFO sqlalchemy.engine.Engine [cached since 60.82s ago] (480,)
[cached since 60.82s ago] (480,)
2025-07-31 23:52:42,076 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:42,076 INFO sqlalchemy.engine.Engine [cached since 60.64s ago] (3,)
[cached since 60.64s ago] (3,)
2025-07-31 23:52:42,076 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:42,076 INFO sqlalchemy.engine.Engine [cached since 60.64s ago] (434,)
[cached since 60.64s ago] (434,)
2025-07-31 23:52:42,078 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:42,078 INFO sqlalchemy.engine.Engine [cached since 60.64s ago] (435,)
[cached since 60.64s ago] (435,)
2025-07-31 23:52:42,078 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.028s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0295, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:42.082180Z"}
INFO:     127.0.0.1:63788 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:47.093857Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:47,103 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:47,103 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:47,103 INFO sqlalchemy.engine.Engine [cached since 65.89s ago] (3,)
[cached since 65.89s ago] (3,)
2025-07-31 23:52:47,118 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:47,118 INFO sqlalchemy.engine.Engine [cached since 65.87s ago] (58, 156)
[cached since 65.87s ago] (58, 156)
2025-07-31 23:52:47,123 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:47,123 INFO sqlalchemy.engine.Engine [cached since 65.87s ago] (480,)
[cached since 65.87s ago] (480,)
2025-07-31 23:52:47,129 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:47,129 INFO sqlalchemy.engine.Engine [cached since 65.69s ago] (3,)
[cached since 65.69s ago] (3,)
2025-07-31 23:52:47,130 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:47,130 INFO sqlalchemy.engine.Engine [cached since 65.69s ago] (434,)
[cached since 65.69s ago] (434,)
2025-07-31 23:52:47,132 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:47,132 INFO sqlalchemy.engine.Engine [cached since 65.69s ago] (435,)
[cached since 65.69s ago] (435,)
2025-07-31 23:52:47,132 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.042s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0427, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:47.136579Z"}
INFO:     127.0.0.1:63811 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:52.151045Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:52,162 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:52,163 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:52,163 INFO sqlalchemy.engine.Engine [cached since 70.94s ago] (3,)
[cached since 70.94s ago] (3,)
2025-07-31 23:52:52,174 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:52,174 INFO sqlalchemy.engine.Engine [cached since 70.93s ago] (58, 156)
[cached since 70.93s ago] (58, 156)
2025-07-31 23:52:52,177 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:52,177 INFO sqlalchemy.engine.Engine [cached since 70.93s ago] (480,)
[cached since 70.93s ago] (480,)
2025-07-31 23:52:52,181 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:52,181 INFO sqlalchemy.engine.Engine [cached since 70.74s ago] (3,)
[cached since 70.74s ago] (3,)
2025-07-31 23:52:52,182 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:52,182 INFO sqlalchemy.engine.Engine [cached since 70.74s ago] (434,)
[cached since 70.74s ago] (434,)
2025-07-31 23:52:52,183 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:52,183 INFO sqlalchemy.engine.Engine [cached since 70.74s ago] (435,)
[cached since 70.74s ago] (435,)
2025-07-31 23:52:52,184 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.035s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0368, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:52.187840Z"}
INFO:     127.0.0.1:63841 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:57.199684Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:52:57,211 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:52:57,211 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:52:57,211 INFO sqlalchemy.engine.Engine [cached since 75.99s ago] (3,)
[cached since 75.99s ago] (3,)
2025-07-31 23:52:57,230 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:52:57,230 INFO sqlalchemy.engine.Engine [cached since 75.98s ago] (58, 156)
[cached since 75.98s ago] (58, 156)
2025-07-31 23:52:57,234 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:52:57,235 INFO sqlalchemy.engine.Engine [cached since 75.98s ago] (480,)
[cached since 75.98s ago] (480,)
2025-07-31 23:52:57,240 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:52:57,240 INFO sqlalchemy.engine.Engine [cached since 75.8s ago] (3,)
[cached since 75.8s ago] (3,)
2025-07-31 23:52:57,241 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:57,241 INFO sqlalchemy.engine.Engine [cached since 75.8s ago] (434,)
[cached since 75.8s ago] (434,)
2025-07-31 23:52:57,243 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:52:57,243 INFO sqlalchemy.engine.Engine [cached since 75.8s ago] (435,)
[cached since 75.8s ago] (435,)
2025-07-31 23:52:57,244 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.048s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0499, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:52:57.249546Z"}
INFO:     127.0.0.1:63866 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/users/me/permissions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.089931Z"}
OPTIONS http://localhost:8000/api/v1/users/me/permissions from 127.0.0.1
Response 200 in 0.000s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/users/me/permissions", "status_code": 200, "process_time": 0.0012, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.091084Z"}
INFO:     127.0.0.1:63866 - "OPTIONS /api/v1/users/me/permissions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.092078Z"}
GET http://localhost:8000/api/v1/users/me/permissions from 127.0.0.1
2025-07-31 23:53:00,099 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:00,099 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,099 INFO sqlalchemy.engine.Engine [cached since 78.88s ago] (3,)
[cached since 78.88s ago] (3,)
2025-07-31 23:53:00,110 INFO sqlalchemy.engine.Engine SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
2025-07-31 23:53:00,110 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ('Tester',)
[generated in 0.00013s] ('Tester',)
2025-07-31 23:53:00,113 INFO sqlalchemy.engine.Engine SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
2025-07-31 23:53:00,113 INFO sqlalchemy.engine.Engine [generated in 0.00009s] (3,)
[generated in 0.00009s] (3,)
2025-07-31 23:53:00,116 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.026s
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "status_code": 200, "process_time": 0.0271, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.119232Z"}
INFO:     127.0.0.1:63866 - "GET /api/v1/users/me/permissions HTTP/1.1" 200 OK
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.406112Z"}
OPTIONS http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
Response 200 in 0.000s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.407255Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.407468Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.407779Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.407934Z"}
OPTIONS http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
GET http://localhost:8000/api/v1/cycle-reports/58/reports/156 from 127.0.0.1
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0029, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.409046Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
INFO:     127.0.0.1:63866 - "OPTIONS /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
Response 200 in 0.002s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0053, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.412557Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.412659Z"}
INFO:     127.0.0.1:63876 - "OPTIONS /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.414446Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
2025-07-31 23:53:00,416 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine [cached since 79.2s ago] (3,)
[cached since 79.2s ago] (3,)
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine [cached since 79.2s ago] (3,)
[cached since 79.2s ago] (3,)
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,417 INFO sqlalchemy.engine.Engine [cached since 79.2s ago] (3,)
[cached since 79.2s ago] (3,)
2025-07-31 23:53:00,420 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:00,420 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,420 INFO sqlalchemy.engine.Engine [cached since 79.2s ago] (3,)
[cached since 79.2s ago] (3,)
2025-07-31 23:53:00,422 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:00,422 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,422 INFO sqlalchemy.engine.Engine [cached since 79.2s ago] (3,)
[cached since 79.2s ago] (3,)
2025-07-31 23:53:00,433 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
2025-07-31 23:53:00,433 INFO sqlalchemy.engine.Engine [generated in 0.00012s] (58, 156, 'Pending Approval', 'Complete')
[generated in 0.00012s] (58, 156, 'Pending Approval', 'Complete')
2025-07-31 23:53:00,434 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:00,434 INFO sqlalchemy.engine.Engine [cached since 79.19s ago] (58, 156)
[cached since 79.19s ago] (58, 156)
2025-07-31 23:53:00,435 INFO sqlalchemy.engine.Engine SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
2025-07-31 23:53:00,435 INFO sqlalchemy.engine.Engine [generated in 0.00005s] (58, 156)
[generated in 0.00005s] (58, 156)
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:00.436615Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:00.436680Z"}
2025-07-31 23:53:00,436 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:53:00,436 INFO sqlalchemy.engine.Engine [cached since 59.95s ago] ('Test Execution',)
[cached since 59.95s ago] ('Test Execution',)
Email templates loaded successfully
2025-07-31 23:53:00,441 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:53:00,441 INFO sqlalchemy.engine.Engine [cached since 59.95s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 59.95s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
2025-07-31 23:53:00,441 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:00,441 INFO sqlalchemy.engine.Engine [cached since 79.19s ago] (480,)
[cached since 79.19s ago] (480,)
2025-07-31 23:53:00,442 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:53:00,442 INFO sqlalchemy.engine.Engine [cached since 59.95s ago] (58, 156, 'Test Execution')
[cached since 59.95s ago] (58, 156, 'Test Execution')
2025-07-31 23:53:00,445 INFO sqlalchemy.engine.Engine SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
2025-07-31 23:53:00,445 INFO sqlalchemy.engine.Engine [generated in 0.00014s] (400,)
[generated in 0.00014s] (400,)
2025-07-31 23:53:00,445 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:00,445 INFO sqlalchemy.engine.Engine [cached since 79.23s ago] (4,)
[cached since 79.23s ago] (4,)
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:00.445807Z"}
2025-07-31 23:53:00,445 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:53:00,445 INFO sqlalchemy.engine.Engine [cached since 59.95s ago] (58, 156, 'Test Execution')
[cached since 59.95s ago] (58, 156, 'Test Execution')
2025-07-31 23:53:00,446 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:53:00,447 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:00,447 INFO sqlalchemy.engine.Engine [cached since 79.01s ago] (3,)
[cached since 79.01s ago] (3,)
2025-07-31 23:53:00,448 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:00,448 INFO sqlalchemy.engine.Engine [cached since 79.01s ago] (434,)
[cached since 79.01s ago] (434,)
2025-07-31 23:53:00,448 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.040s
2025-07-31 23:53:00,449 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:00,449 INFO sqlalchemy.engine.Engine [cached since 79.01s ago] (435,)
[cached since 79.01s ago] (435,)
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "status_code": 200, "process_time": 0.042, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.449426Z"}
2025-07-31 23:53:00,449 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
INFO:     127.0.0.1:63877 - "GET /api/v1/cycle-reports/58/reports/156 HTTP/1.1" 200 OK
2025-07-31 23:53:00,451 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:00,451 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (6,)
[generated in 0.00007s] (6,)
2025-07-31 23:53:00,451 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:53:00,451 INFO sqlalchemy.engine.Engine [cached since 59.95s ago] (58, 156, 'Test Execution')
[cached since 59.95s ago] (58, 156, 'Test Execution')
2025-07-31 23:53:00,453 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:53:00,453 INFO sqlalchemy.engine.Engine [generated in 0.00013s] (436, 434, 435, 437)
[generated in 0.00013s] (436, 434, 435, 437)
Response 200 in 0.038s
Response 200 in 0.043s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0396, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.454010Z"}
INFO:     127.0.0.1:63876 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0463, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.454266Z"}
INFO:     127.0.0.1:63879 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:00.455145Z"}
2025-07-31 23:53:00,455 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:53:00,457 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:53:00,457 INFO sqlalchemy.engine.Engine [generated in 0.00012s] (436, 434, 435, 437)
[generated in 0.00012s] (436, 434, 435, 437)
Response 200 in 0.045s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0464, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.459087Z"}
INFO:     127.0.0.1:63866 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
2025-07-31 23:53:00,461 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.054s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "status_code": 200, "process_time": 0.0563, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:00.464080Z"}
INFO:     127.0.0.1:63878 - "GET /api/v1/test-execution/58/reports/156/submitted-test-cases HTTP/1.1" 200 OK
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:04.804262Z"}
OPTIONS http://localhost:8000/api/v1/test-execution/executions/23/review from 127.0.0.1
Response 200 in 0.000s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "status_code": 200, "process_time": 0.002, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:04.806244Z"}
INFO:     127.0.0.1:63877 - "OPTIONS /api/v1/test-execution/executions/23/review HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:04.807826Z"}
POST http://localhost:8000/api/v1/test-execution/executions/23/review from 127.0.0.1
2025-07-31 23:53:04,817 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:04,817 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:04,817 INFO sqlalchemy.engine.Engine [cached since 83.6s ago] (3,)
[cached since 83.6s ago] (3,)
Claude provider initialized with model: claude-3-5-sonnet-20241022
Claude provider initialized successfully
Gemini provider skipped - using Claude only for LLM calls
Hybrid LLM service initialized with providers: ['claude']
Hybrid analysis enabled: True
Failover enabled with max failures: 3
2025-07-31 23:53:04,838 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:53:04,838 INFO sqlalchemy.engine.Engine [cached since 83.36s ago] (23,)
[cached since 83.36s ago] (23,)
2025-07-31 23:53:04,840 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:53:04,840 INFO sqlalchemy.engine.Engine [cached since 83.36s ago] (23,)
[cached since 83.36s ago] (23,)
2025-07-31 23:53:04,841 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
2025-07-31 23:53:04,841 INFO sqlalchemy.engine.Engine [cached since 83.36s ago] (23, 480, <ReviewStatus.APPROVED: 'approved'>, 'Test execution results approved', None, None, 1.0, 1.0, 1.0, 1.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', False, None, False, None, 3, 3, 3)
[cached since 83.36s ago] (23, 480, <ReviewStatus.APPROVED: 'approved'>, 'Test execution results approved', None, None, 1.0, 1.0, 1.0, 1.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', False, None, False, None, 3, 3, 3)
2025-07-31 23:53:04,845 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:53:04,855 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:04,855 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
2025-07-31 23:53:04,855 INFO sqlalchemy.engine.Engine [cached since 83.35s ago] (8,)
[cached since 83.35s ago] (8,)
2025-07-31 23:53:04,857 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
2025-07-31 23:53:04,857 INFO sqlalchemy.engine.Engine [cached since 83.35s ago] (23, 'reviewed', '{"review_status": "approved", "overall_score": 1.0, "requires_retest": false}', 3, None, None, None)
[cached since 83.35s ago] (23, 'reviewed', '{"review_status": "approved", "overall_score": 1.0, "requires_retest": false}', 3, None, None, None)
2025-07-31 23:53:04,861 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.057s
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/23/review", "status_code": 200, "process_time": 0.0587, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:04.866572Z"}
INFO:     127.0.0.1:63876 - "POST /api/v1/test-execution/executions/23/review HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.111290Z"}
GET http://localhost:8000/api/v1/users/me/permissions from 127.0.0.1
2025-07-31 23:53:05,117 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:05,117 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,117 INFO sqlalchemy.engine.Engine [cached since 83.9s ago] (3,)
[cached since 83.9s ago] (3,)
2025-07-31 23:53:05,126 INFO sqlalchemy.engine.Engine SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
2025-07-31 23:53:05,126 INFO sqlalchemy.engine.Engine [cached since 5.016s ago] ('Tester',)
[cached since 5.016s ago] ('Tester',)
2025-07-31 23:53:05,127 INFO sqlalchemy.engine.Engine SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
2025-07-31 23:53:05,128 INFO sqlalchemy.engine.Engine [cached since 5.015s ago] (3,)
[cached since 5.015s ago] (3,)
2025-07-31 23:53:05,131 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.022s
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "status_code": 200, "process_time": 0.0233, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.134568Z"}
INFO:     127.0.0.1:63879 - "GET /api/v1/users/me/permissions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.424293Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.424734Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.425197Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.425294Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.425668Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
GET http://localhost:8000/api/v1/cycle-reports/58/reports/156 from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:05,436 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:05,437 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,437 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (3,)
[cached since 84.22s ago] (3,)
2025-07-31 23:53:05,437 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (3,)
[cached since 84.22s ago] (3,)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (3,)
[cached since 84.22s ago] (3,)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (3,)
[cached since 84.22s ago] (3,)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,438 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (3,)
[cached since 84.22s ago] (3,)
2025-07-31 23:53:05,455 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
2025-07-31 23:53:05,455 INFO sqlalchemy.engine.Engine [cached since 5.022s ago] (58, 156, 'Pending Approval', 'Complete')
[cached since 5.022s ago] (58, 156, 'Pending Approval', 'Complete')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:05.455674Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:05.455763Z"}
2025-07-31 23:53:05,456 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:53:05,456 INFO sqlalchemy.engine.Engine [cached since 64.97s ago] ('Test Execution',)
[cached since 64.97s ago] ('Test Execution',)
Email templates loaded successfully
2025-07-31 23:53:05,464 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:53:05,464 INFO sqlalchemy.engine.Engine [cached since 64.98s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 64.98s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
2025-07-31 23:53:05,465 INFO sqlalchemy.engine.Engine SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
2025-07-31 23:53:05,465 INFO sqlalchemy.engine.Engine [cached since 5.03s ago] (58, 156)
[cached since 5.03s ago] (58, 156)
2025-07-31 23:53:05,465 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:05,465 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (58, 156)
[cached since 84.22s ago] (58, 156)
2025-07-31 23:53:05,466 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:53:05,466 INFO sqlalchemy.engine.Engine [cached since 64.97s ago] (58, 156, 'Test Execution')
[cached since 64.97s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:05.467395Z"}
2025-07-31 23:53:05,467 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:53:05,467 INFO sqlalchemy.engine.Engine [cached since 64.97s ago] (58, 156, 'Test Execution')
[cached since 64.97s ago] (58, 156, 'Test Execution')
2025-07-31 23:53:05,468 INFO sqlalchemy.engine.Engine SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
2025-07-31 23:53:05,468 INFO sqlalchemy.engine.Engine [cached since 5.024s ago] (400,)
[cached since 5.024s ago] (400,)
2025-07-31 23:53:05,468 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:05,469 INFO sqlalchemy.engine.Engine [cached since 84.22s ago] (480,)
[cached since 84.22s ago] (480,)
2025-07-31 23:53:05,472 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:53:05,474 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:53:05,474 INFO sqlalchemy.engine.Engine [cached since 64.97s ago] (58, 156, 'Test Execution')
[cached since 64.97s ago] (58, 156, 'Test Execution')
2025-07-31 23:53:05,474 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:05,475 INFO sqlalchemy.engine.Engine [cached since 84.04s ago] (3,)
[cached since 84.04s ago] (3,)
2025-07-31 23:53:05,475 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:05,475 INFO sqlalchemy.engine.Engine [cached since 5.024s ago] (6,)
[cached since 5.024s ago] (6,)
2025-07-31 23:53:05,475 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:05,475 INFO sqlalchemy.engine.Engine [cached since 84.26s ago] (4,)
[cached since 84.26s ago] (4,)
2025-07-31 23:53:05,476 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:53:05,476 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:05,476 INFO sqlalchemy.engine.Engine [cached since 84.04s ago] (434,)
[cached since 84.04s ago] (434,)
2025-07-31 23:53:05,477 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:53:05,477 INFO sqlalchemy.engine.Engine [cached since 5.024s ago] (436, 434, 435, 437)
[cached since 5.024s ago] (436, 434, 435, 437)
Response 200 in 0.051s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0536, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.478333Z"}
2025-07-31 23:53:05,478 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:05,478 INFO sqlalchemy.engine.Engine [cached since 84.04s ago] (435,)
[cached since 84.04s ago] (435,)
INFO:     127.0.0.1:63878 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
2025-07-31 23:53:05,479 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.052s
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "status_code": 200, "process_time": 0.0563, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.481467Z"}
INFO:     127.0.0.1:63877 - "GET /api/v1/cycle-reports/58/reports/156 HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:05.482006Z"}
2025-07-31 23:53:05,482 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.054s
2025-07-31 23:53:05,483 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:53:05,483 INFO sqlalchemy.engine.Engine [cached since 5.026s ago] (436, 434, 435, 437)
[cached since 5.026s ago] (436, 434, 435, 437)
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0584, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.484102Z"}
INFO:     127.0.0.1:63879 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
Response 200 in 0.058s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.061, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.485248Z"}
INFO:     127.0.0.1:63866 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
2025-07-31 23:53:05,488 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.063s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "status_code": 200, "process_time": 0.0661, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:05.491397Z"}
INFO:     127.0.0.1:63876 - "GET /api/v1/test-execution/58/reports/156/submitted-test-cases HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:10.503650Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:10,511 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:10,511 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:10,511 INFO sqlalchemy.engine.Engine [cached since 89.29s ago] (3,)
[cached since 89.29s ago] (3,)
2025-07-31 23:53:10,524 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:10,524 INFO sqlalchemy.engine.Engine [cached since 89.28s ago] (58, 156)
[cached since 89.28s ago] (58, 156)
2025-07-31 23:53:10,528 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:10,528 INFO sqlalchemy.engine.Engine [cached since 89.28s ago] (480,)
[cached since 89.28s ago] (480,)
2025-07-31 23:53:10,533 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:10,533 INFO sqlalchemy.engine.Engine [cached since 89.09s ago] (3,)
[cached since 89.09s ago] (3,)
2025-07-31 23:53:10,534 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:10,534 INFO sqlalchemy.engine.Engine [cached since 89.09s ago] (434,)
[cached since 89.09s ago] (434,)
2025-07-31 23:53:10,535 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:10,535 INFO sqlalchemy.engine.Engine [cached since 89.09s ago] (435,)
[cached since 89.09s ago] (435,)
2025-07-31 23:53:10,535 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.035s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0357, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:10.539365Z"}
INFO:     127.0.0.1:63898 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:15.553307Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:15,562 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:15,562 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:15,562 INFO sqlalchemy.engine.Engine [cached since 94.34s ago] (3,)
[cached since 94.34s ago] (3,)
2025-07-31 23:53:15,576 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:15,576 INFO sqlalchemy.engine.Engine [cached since 94.33s ago] (58, 156)
[cached since 94.33s ago] (58, 156)
2025-07-31 23:53:15,579 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:15,579 INFO sqlalchemy.engine.Engine [cached since 94.33s ago] (480,)
[cached since 94.33s ago] (480,)
2025-07-31 23:53:15,584 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:15,584 INFO sqlalchemy.engine.Engine [cached since 94.14s ago] (3,)
[cached since 94.14s ago] (3,)
2025-07-31 23:53:15,585 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:15,585 INFO sqlalchemy.engine.Engine [cached since 94.14s ago] (434,)
[cached since 94.14s ago] (434,)
2025-07-31 23:53:15,586 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:15,586 INFO sqlalchemy.engine.Engine [cached since 94.15s ago] (435,)
[cached since 94.15s ago] (435,)
2025-07-31 23:53:15,586 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.035s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0365, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:15.589746Z"}
INFO:     127.0.0.1:63902 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:20.599641Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:20,608 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:20,608 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:20,608 INFO sqlalchemy.engine.Engine [cached since 99.39s ago] (3,)
[cached since 99.39s ago] (3,)
2025-07-31 23:53:20,620 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:20,620 INFO sqlalchemy.engine.Engine [cached since 99.37s ago] (58, 156)
[cached since 99.37s ago] (58, 156)
2025-07-31 23:53:20,624 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:20,624 INFO sqlalchemy.engine.Engine [cached since 99.37s ago] (480,)
[cached since 99.37s ago] (480,)
2025-07-31 23:53:20,629 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:20,629 INFO sqlalchemy.engine.Engine [cached since 99.19s ago] (3,)
[cached since 99.19s ago] (3,)
2025-07-31 23:53:20,629 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:20,629 INFO sqlalchemy.engine.Engine [cached since 99.19s ago] (434,)
[cached since 99.19s ago] (434,)
2025-07-31 23:53:20,631 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:20,631 INFO sqlalchemy.engine.Engine [cached since 99.19s ago] (435,)
[cached since 99.19s ago] (435,)
2025-07-31 23:53:20,631 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.034s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0351, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:20.634751Z"}
INFO:     127.0.0.1:63907 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:25.646226Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:25,655 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:25,655 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:25,655 INFO sqlalchemy.engine.Engine [cached since 104.4s ago] (3,)
[cached since 104.4s ago] (3,)
2025-07-31 23:53:25,669 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:25,669 INFO sqlalchemy.engine.Engine [cached since 104.4s ago] (58, 156)
[cached since 104.4s ago] (58, 156)
2025-07-31 23:53:25,672 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:25,672 INFO sqlalchemy.engine.Engine [cached since 104.4s ago] (480,)
[cached since 104.4s ago] (480,)
2025-07-31 23:53:25,677 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:25,678 INFO sqlalchemy.engine.Engine [cached since 104.2s ago] (3,)
[cached since 104.2s ago] (3,)
2025-07-31 23:53:25,678 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:25,678 INFO sqlalchemy.engine.Engine [cached since 104.2s ago] (434,)
[cached since 104.2s ago] (434,)
2025-07-31 23:53:25,680 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:25,680 INFO sqlalchemy.engine.Engine [cached since 104.2s ago] (435,)
[cached since 104.2s ago] (435,)
2025-07-31 23:53:25,680 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.037s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0384, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:25.684586Z"}
INFO:     127.0.0.1:63912 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:30.695551Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:30,705 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:30,705 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:30,705 INFO sqlalchemy.engine.Engine [cached since 109.5s ago] (3,)
[cached since 109.5s ago] (3,)
2025-07-31 23:53:30,718 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:30,718 INFO sqlalchemy.engine.Engine [cached since 109.5s ago] (58, 156)
[cached since 109.5s ago] (58, 156)
2025-07-31 23:53:30,721 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:30,721 INFO sqlalchemy.engine.Engine [cached since 109.5s ago] (480,)
[cached since 109.5s ago] (480,)
2025-07-31 23:53:30,726 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:30,726 INFO sqlalchemy.engine.Engine [cached since 109.3s ago] (3,)
[cached since 109.3s ago] (3,)
2025-07-31 23:53:30,727 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:30,727 INFO sqlalchemy.engine.Engine [cached since 109.3s ago] (434,)
[cached since 109.3s ago] (434,)
2025-07-31 23:53:30,729 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:30,729 INFO sqlalchemy.engine.Engine [cached since 109.3s ago] (435,)
[cached since 109.3s ago] (435,)
2025-07-31 23:53:30,729 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.037s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0381, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:30.733615Z"}
INFO:     127.0.0.1:63917 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:35.484924Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
2025-07-31 23:53:35,491 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:35,491 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:35,491 INFO sqlalchemy.engine.Engine [cached since 114.3s ago] (3,)
[cached since 114.3s ago] (3,)
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:35.493757Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:53:35,501 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:35,501 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:35,501 INFO sqlalchemy.engine.Engine [cached since 114.3s ago] (3,)
[cached since 114.3s ago] (3,)
Email templates loaded successfully
2025-07-31 23:53:35,508 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:53:35,508 INFO sqlalchemy.engine.Engine [cached since 95.02s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 95.02s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:35.514599Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:35.514648Z"}
2025-07-31 23:53:35,514 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:53:35,514 INFO sqlalchemy.engine.Engine [cached since 95.03s ago] ('Test Execution',)
[cached since 95.03s ago] ('Test Execution',)
2025-07-31 23:53:35,515 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:53:35,516 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:53:35,516 INFO sqlalchemy.engine.Engine [cached since 95.02s ago] (58, 156, 'Test Execution')
[cached since 95.02s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:35.517729Z"}
2025-07-31 23:53:35,517 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:53:35,517 INFO sqlalchemy.engine.Engine [cached since 95.02s ago] (58, 156, 'Test Execution')
[cached since 95.02s ago] (58, 156, 'Test Execution')
Response 200 in 0.033s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0339, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:35.518824Z"}
INFO:     127.0.0.1:63917 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
2025-07-31 23:53:35,523 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:53:35,523 INFO sqlalchemy.engine.Engine [cached since 95.02s ago] (58, 156, 'Test Execution')
[cached since 95.02s ago] (58, 156, 'Test Execution')
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:53:35.527933Z"}
2025-07-31 23:53:35,528 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.037s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0379, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:35.531676Z"}
INFO:     127.0.0.1:63921 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:35.742189Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:35,751 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:35,751 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:35,751 INFO sqlalchemy.engine.Engine [cached since 114.5s ago] (3,)
[cached since 114.5s ago] (3,)
2025-07-31 23:53:35,761 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:35,761 INFO sqlalchemy.engine.Engine [cached since 114.5s ago] (58, 156)
[cached since 114.5s ago] (58, 156)
2025-07-31 23:53:35,764 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:35,764 INFO sqlalchemy.engine.Engine [cached since 114.5s ago] (480,)
[cached since 114.5s ago] (480,)
2025-07-31 23:53:35,769 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:35,769 INFO sqlalchemy.engine.Engine [cached since 114.3s ago] (3,)
[cached since 114.3s ago] (3,)
2025-07-31 23:53:35,770 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:35,770 INFO sqlalchemy.engine.Engine [cached since 114.3s ago] (434,)
[cached since 114.3s ago] (434,)
2025-07-31 23:53:35,772 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:35,772 INFO sqlalchemy.engine.Engine [cached since 114.3s ago] (435,)
[cached since 114.3s ago] (435,)
2025-07-31 23:53:35,773 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.033s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.034, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:35.776224Z"}
INFO:     127.0.0.1:63917 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:40.786989Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:40,796 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:40,797 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:40,797 INFO sqlalchemy.engine.Engine [cached since 119.6s ago] (3,)
[cached since 119.6s ago] (3,)
2025-07-31 23:53:40,812 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:40,812 INFO sqlalchemy.engine.Engine [cached since 119.6s ago] (58, 156)
[cached since 119.6s ago] (58, 156)
2025-07-31 23:53:40,815 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:40,815 INFO sqlalchemy.engine.Engine [cached since 119.6s ago] (480,)
[cached since 119.6s ago] (480,)
2025-07-31 23:53:40,821 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:40,821 INFO sqlalchemy.engine.Engine [cached since 119.4s ago] (3,)
[cached since 119.4s ago] (3,)
2025-07-31 23:53:40,822 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:40,822 INFO sqlalchemy.engine.Engine [cached since 119.4s ago] (434,)
[cached since 119.4s ago] (434,)
2025-07-31 23:53:40,823 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:40,824 INFO sqlalchemy.engine.Engine [cached since 119.4s ago] (435,)
[cached since 119.4s ago] (435,)
2025-07-31 23:53:40,824 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.040s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0408, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:40.827762Z"}
INFO:     127.0.0.1:63928 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:45.837904Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:45,843 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:45,843 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:45,843 INFO sqlalchemy.engine.Engine [cached since 124.6s ago] (3,)
[cached since 124.6s ago] (3,)
2025-07-31 23:53:45,855 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:45,855 INFO sqlalchemy.engine.Engine [cached since 124.6s ago] (58, 156)
[cached since 124.6s ago] (58, 156)
2025-07-31 23:53:45,857 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:45,858 INFO sqlalchemy.engine.Engine [cached since 124.6s ago] (480,)
[cached since 124.6s ago] (480,)
2025-07-31 23:53:45,861 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:45,861 INFO sqlalchemy.engine.Engine [cached since 124.4s ago] (3,)
[cached since 124.4s ago] (3,)
2025-07-31 23:53:45,862 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:45,862 INFO sqlalchemy.engine.Engine [cached since 124.4s ago] (434,)
[cached since 124.4s ago] (434,)
2025-07-31 23:53:45,863 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:45,863 INFO sqlalchemy.engine.Engine [cached since 124.4s ago] (435,)
[cached since 124.4s ago] (435,)
2025-07-31 23:53:45,863 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.028s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0289, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:45.866762Z"}
INFO:     127.0.0.1:63933 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:50.877440Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:50,888 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:50,888 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:50,888 INFO sqlalchemy.engine.Engine [cached since 129.7s ago] (3,)
[cached since 129.7s ago] (3,)
2025-07-31 23:53:50,899 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:50,899 INFO sqlalchemy.engine.Engine [cached since 129.7s ago] (58, 156)
[cached since 129.7s ago] (58, 156)
2025-07-31 23:53:50,902 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:50,902 INFO sqlalchemy.engine.Engine [cached since 129.7s ago] (480,)
[cached since 129.7s ago] (480,)
2025-07-31 23:53:50,907 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:50,907 INFO sqlalchemy.engine.Engine [cached since 129.5s ago] (3,)
[cached since 129.5s ago] (3,)
2025-07-31 23:53:50,907 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:50,907 INFO sqlalchemy.engine.Engine [cached since 129.5s ago] (434,)
[cached since 129.5s ago] (434,)
2025-07-31 23:53:50,909 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:50,909 INFO sqlalchemy.engine.Engine [cached since 129.5s ago] (435,)
[cached since 129.5s ago] (435,)
2025-07-31 23:53:50,910 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.035s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0362, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:50.913676Z"}
INFO:     127.0.0.1:63956 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:55.925524Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:53:55,935 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:53:55,935 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:53:55,935 INFO sqlalchemy.engine.Engine [cached since 134.7s ago] (3,)
[cached since 134.7s ago] (3,)
2025-07-31 23:53:55,949 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:53:55,949 INFO sqlalchemy.engine.Engine [cached since 134.7s ago] (58, 156)
[cached since 134.7s ago] (58, 156)
2025-07-31 23:53:55,953 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:53:55,953 INFO sqlalchemy.engine.Engine [cached since 134.7s ago] (480,)
[cached since 134.7s ago] (480,)
2025-07-31 23:53:55,959 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:53:55,959 INFO sqlalchemy.engine.Engine [cached since 134.5s ago] (3,)
[cached since 134.5s ago] (3,)
2025-07-31 23:53:55,959 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:55,959 INFO sqlalchemy.engine.Engine [cached since 134.5s ago] (434,)
[cached since 134.5s ago] (434,)
2025-07-31 23:53:55,961 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:53:55,961 INFO sqlalchemy.engine.Engine [cached since 134.5s ago] (435,)
[cached since 134.5s ago] (435,)
2025-07-31 23:53:55,961 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.039s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.04, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:53:55.965494Z"}
INFO:     127.0.0.1:63981 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:00.978800Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:00,991 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:00,991 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:00,991 INFO sqlalchemy.engine.Engine [cached since 139.8s ago] (3,)
[cached since 139.8s ago] (3,)
2025-07-31 23:54:01,005 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:01,005 INFO sqlalchemy.engine.Engine [cached since 139.8s ago] (58, 156)
[cached since 139.8s ago] (58, 156)
2025-07-31 23:54:01,009 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:01,009 INFO sqlalchemy.engine.Engine [cached since 139.8s ago] (480,)
[cached since 139.8s ago] (480,)
2025-07-31 23:54:01,016 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:01,017 INFO sqlalchemy.engine.Engine [cached since 139.6s ago] (3,)
[cached since 139.6s ago] (3,)
2025-07-31 23:54:01,018 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:01,018 INFO sqlalchemy.engine.Engine [cached since 139.6s ago] (434,)
[cached since 139.6s ago] (434,)
2025-07-31 23:54:01,020 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:01,020 INFO sqlalchemy.engine.Engine [cached since 139.6s ago] (435,)
[cached since 139.6s ago] (435,)
2025-07-31 23:54:01,021 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.046s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.048, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:01.026786Z"}
INFO:     127.0.0.1:64003 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:05.527066Z"}
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
2025-07-31 23:54:05,536 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:05,537 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:05,537 INFO sqlalchemy.engine.Engine [cached since 144.3s ago] (3,)
[cached since 144.3s ago] (3,)
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:05.539872Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
2025-07-31 23:54:05,548 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:05,548 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:05,548 INFO sqlalchemy.engine.Engine [cached since 144.3s ago] (3,)
[cached since 144.3s ago] (3,)
Email templates loaded successfully
2025-07-31 23:54:05,558 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:54:05,558 INFO sqlalchemy.engine.Engine [cached since 125.1s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[cached since 125.1s ago] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:05.559519Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:05.559565Z"}
2025-07-31 23:54:05,559 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:54:05,559 INFO sqlalchemy.engine.Engine [cached since 125.1s ago] ('Test Execution',)
[cached since 125.1s ago] ('Test Execution',)
2025-07-31 23:54:05,561 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:54:05,561 INFO sqlalchemy.engine.Engine [cached since 125.1s ago] (58, 156, 'Test Execution')
[cached since 125.1s ago] (58, 156, 'Test Execution')
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:05.562660Z"}
2025-07-31 23:54:05,562 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:54:05,562 INFO sqlalchemy.engine.Engine [cached since 125.1s ago] (58, 156, 'Test Execution')
[cached since 125.1s ago] (58, 156, 'Test Execution')
2025-07-31 23:54:05,565 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:54:05,568 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:54:05,568 INFO sqlalchemy.engine.Engine [cached since 125.1s ago] (58, 156, 'Test Execution')
[cached since 125.1s ago] (58, 156, 'Test Execution')
Response 200 in 0.041s
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.042, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:05.569095Z"}
INFO:     127.0.0.1:64003 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:05.572992Z"}
2025-07-31 23:54:05,573 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.035s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0361, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:05.575945Z"}
INFO:     127.0.0.1:64007 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:06.034518Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:06,041 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:06,041 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:06,041 INFO sqlalchemy.engine.Engine [cached since 144.8s ago] (3,)
[cached since 144.8s ago] (3,)
2025-07-31 23:54:06,051 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:06,051 INFO sqlalchemy.engine.Engine [cached since 144.8s ago] (58, 156)
[cached since 144.8s ago] (58, 156)
2025-07-31 23:54:06,055 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:06,055 INFO sqlalchemy.engine.Engine [cached since 144.8s ago] (480,)
[cached since 144.8s ago] (480,)
2025-07-31 23:54:06,061 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:06,061 INFO sqlalchemy.engine.Engine [cached since 144.6s ago] (3,)
[cached since 144.6s ago] (3,)
2025-07-31 23:54:06,061 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:06,061 INFO sqlalchemy.engine.Engine [cached since 144.6s ago] (434,)
[cached since 144.6s ago] (434,)
2025-07-31 23:54:06,063 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:06,063 INFO sqlalchemy.engine.Engine [cached since 144.6s ago] (435,)
[cached since 144.6s ago] (435,)
2025-07-31 23:54:06,063 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.032s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.033, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:06.067478Z"}
INFO:     127.0.0.1:64003 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'app/services/test_execution_service.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
{"event": "Database connections closed", "logger": "app.core.database", "level": "info", "timestamp": "2025-08-01T03:54:10.831181Z"}
{"event": "Shutting down SynapseDT application", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:10.831225Z"}
INFO:     Application shutdown complete.
INFO:     Finished server process [60400]
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'orm_mode' has been renamed to 'from_attributes'
  warnings.warn(message, UserWarning)
/Users/dineshpatel/code/projects/SynapseDTE/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:373: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
Security middleware configured successfully
INFO:     Started server process [60879]
INFO:     Waiting for application startup.
{"event": "Starting SynapseDT application - Clean Architecture Edition", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.771191Z"}
2025-07-31 23:54:12,780 INFO sqlalchemy.engine.Engine select pg_catalog.version()
select pg_catalog.version()
2025-07-31 23:54:12,780 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:54:12,781 INFO sqlalchemy.engine.Engine select current_schema()
select current_schema()
2025-07-31 23:54:12,781 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:54:12,782 INFO sqlalchemy.engine.Engine show standard_conforming_strings
show standard_conforming_strings
2025-07-31 23:54:12,782 INFO sqlalchemy.engine.Engine [raw sql] ()
[raw sql] ()
2025-07-31 23:54:12,782 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:12,782 INFO sqlalchemy.engine.Engine SELECT 1
SELECT 1
2025-07-31 23:54:12,782 INFO sqlalchemy.engine.Engine [generated in 0.00004s] ()
[generated in 0.00004s] ()
2025-07-31 23:54:12,783 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"event": "Database connection verified", "logger": "app.core.database", "level": "info", "timestamp": "2025-08-01T03:54:12.786020Z"}
{"event": "Job manager initialized with 195 jobs", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.786064Z"}
{"event": "Clean architecture dependencies initialized", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.786085Z"}
Connected to Temporal server
{"event": "Temporal client initialized and connected", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.789638Z"}
{"event": "Application startup complete", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.789659Z"}
INFO:     Application startup complete.
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.791641Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:12,799 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:12,957 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:12,957 INFO sqlalchemy.engine.Engine [generated in 0.00013s] (3,)
[generated in 0.00013s] (3,)
2025-07-31 23:54:12,978 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:12,978 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (58, 156)
[generated in 0.00007s] (58, 156)
2025-07-31 23:54:12,981 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:12,982 INFO sqlalchemy.engine.Engine [generated in 0.00009s] (480,)
[generated in 0.00009s] (480,)
2025-07-31 23:54:12,987 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:12,987 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (3,)
[generated in 0.00008s] (3,)
2025-07-31 23:54:12,988 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:12,988 INFO sqlalchemy.engine.Engine [generated in 0.00004s] (434,)
[generated in 0.00004s] (434,)
2025-07-31 23:54:12,989 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:12,989 INFO sqlalchemy.engine.Engine [cached since 0.001267s ago] (435,)
[cached since 0.001267s ago] (435,)
2025-07-31 23:54:12,989 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.200s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.201, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:12.992604Z"}
INFO:     127.0.0.1:64031 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:17.997212Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:18,007 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:18,007 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:18,008 INFO sqlalchemy.engine.Engine [cached since 5.051s ago] (3,)
[cached since 5.051s ago] (3,)
2025-07-31 23:54:18,020 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:18,021 INFO sqlalchemy.engine.Engine [cached since 5.043s ago] (58, 156)
[cached since 5.043s ago] (58, 156)
2025-07-31 23:54:18,025 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:18,025 INFO sqlalchemy.engine.Engine [cached since 5.044s ago] (480,)
[cached since 5.044s ago] (480,)
2025-07-31 23:54:18,032 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:18,032 INFO sqlalchemy.engine.Engine [cached since 5.046s ago] (3,)
[cached since 5.046s ago] (3,)
2025-07-31 23:54:18,034 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:18,034 INFO sqlalchemy.engine.Engine [cached since 5.046s ago] (434,)
[cached since 5.046s ago] (434,)
2025-07-31 23:54:18,036 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:18,036 INFO sqlalchemy.engine.Engine [cached since 5.048s ago] (435,)
[cached since 5.048s ago] (435,)
2025-07-31 23:54:18,037 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.044s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0458, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:18.042984Z"}
INFO:     127.0.0.1:64040 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:23.062944Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:23,073 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:23,073 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:23,073 INFO sqlalchemy.engine.Engine [cached since 10.12s ago] (3,)
[cached since 10.12s ago] (3,)
2025-07-31 23:54:23,087 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:23,088 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (58, 156)
[cached since 10.11s ago] (58, 156)
2025-07-31 23:54:23,092 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:23,092 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (480,)
[cached since 10.11s ago] (480,)
2025-07-31 23:54:23,101 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:23,101 INFO sqlalchemy.engine.Engine [cached since 10.11s ago] (3,)
[cached since 10.11s ago] (3,)
2025-07-31 23:54:23,103 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:23,103 INFO sqlalchemy.engine.Engine [cached since 10.12s ago] (434,)
[cached since 10.12s ago] (434,)
2025-07-31 23:54:23,106 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:23,106 INFO sqlalchemy.engine.Engine [cached since 10.12s ago] (435,)
[cached since 10.12s ago] (435,)
2025-07-31 23:54:23,108 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.050s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0527, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:23.115659Z"}
INFO:     127.0.0.1:64068 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/executions/22/review", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:25.308908Z"}
OPTIONS http://localhost:8000/api/v1/test-execution/executions/22/review from 127.0.0.1
Response 200 in 0.000s
{"method": "OPTIONS", "url": "http://localhost:8000/api/v1/test-execution/executions/22/review", "status_code": 200, "process_time": 0.0016, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:25.310462Z"}
INFO:     127.0.0.1:64068 - "OPTIONS /api/v1/test-execution/executions/22/review HTTP/1.1" 200 OK
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/22/review", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:25.311846Z"}
POST http://localhost:8000/api/v1/test-execution/executions/22/review from 127.0.0.1
2025-07-31 23:54:25,320 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:25,320 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:25,320 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] (3,)
[cached since 12.36s ago] (3,)
Claude provider initialized with model: claude-3-5-sonnet-20241022
Claude provider initialized successfully
Gemini provider skipped - using Claude only for LLM calls
Hybrid LLM service initialized with providers: ['claude']
Hybrid analysis enabled: True
Failover enabled with max failures: 3
2025-07-31 23:54:25,352 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.phase_id 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:54:25,352 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (22,)
[generated in 0.00008s] (22,)
2025-07-31 23:54:25,354 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:54:25,354 INFO sqlalchemy.engine.Engine [generated in 0.00004s] (22,)
[generated in 0.00004s] (22,)
2025-07-31 23:54:25,358 INFO sqlalchemy.engine.Engine UPDATE cycle_report_test_execution_results SET test_result=$1::VARCHAR, updated_at=now() WHERE cycle_report_test_execution_results.id = $2::INTEGER
UPDATE cycle_report_test_execution_results SET test_result=$1::VARCHAR, updated_at=now() WHERE cycle_report_test_execution_results.id = $2::INTEGER
2025-07-31 23:54:25,358 INFO sqlalchemy.engine.Engine [generated in 0.00006s] ('fail', 22)
[generated in 0.00006s] ('fail', 22)
2025-07-31 23:54:25,365 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
INSERT INTO cycle_report_test_execution_reviews (execution_id, phase_id, review_status, review_notes, reviewer_comments, recommended_action, accuracy_score, completeness_score, consistency_score, overall_score, review_criteria_used, requires_retest, retest_reason, escalation_required, escalation_reason, reviewed_by, created_by, updated_by) VALUES ($1::INTEGER, $2::INTEGER, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::FLOAT, $8::FLOAT, $9::FLOAT, $10::FLOAT, $11::JSONB, $12::BOOLEAN, $13::VARCHAR, $14::BOOLEAN, $15::VARCHAR, $16::INTEGER, $17::INTEGER, $18::INTEGER) RETURNING cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at
2025-07-31 23:54:25,365 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (22, 480, <ReviewStatus.REJECTED: 'rejected'>, 'This test failed due to PK not matching', None, None, 0.0, 0.0, 0.0, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', True, 'This test failed due to PK not matching', False, None, 3, 3, 3)
[generated in 0.00008s] (22, 480, <ReviewStatus.REJECTED: 'rejected'>, 'This test failed due to PK not matching', None, None, 0.0, 0.0, 0.0, 0.0, '{"criteria_version": "1.0", "accuracy_weight": 0.4, "completeness_weight": 0.3, "consistency_weight": 0.3, "minimum_threshold": 0.8, "auto_approve_threshold": 0.95}', True, 'This test failed due to PK not matching', False, None, 3, 3, 3)
2025-07-31 23:54:25,367 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2025-07-31 23:54:25,378 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:25,379 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
SELECT cycle_report_test_execution_reviews.id, cycle_report_test_execution_reviews.execution_id, cycle_report_test_execution_reviews.phase_id, cycle_report_test_execution_reviews.review_status, cycle_report_test_execution_reviews.review_notes, cycle_report_test_execution_reviews.reviewer_comments, cycle_report_test_execution_reviews.recommended_action, cycle_report_test_execution_reviews.accuracy_score, cycle_report_test_execution_reviews.completeness_score, cycle_report_test_execution_reviews.consistency_score, cycle_report_test_execution_reviews.overall_score, cycle_report_test_execution_reviews.review_criteria_used, cycle_report_test_execution_reviews.requires_retest, cycle_report_test_execution_reviews.retest_reason, cycle_report_test_execution_reviews.escalation_required, cycle_report_test_execution_reviews.escalation_reason, cycle_report_test_execution_reviews.reviewed_by, cycle_report_test_execution_reviews.reviewed_at, cycle_report_test_execution_reviews.created_at, cycle_report_test_execution_reviews.updated_at, cycle_report_test_execution_reviews.created_by, cycle_report_test_execution_reviews.updated_by 
FROM cycle_report_test_execution_reviews 
WHERE cycle_report_test_execution_reviews.id = $1::INTEGER
2025-07-31 23:54:25,379 INFO sqlalchemy.engine.Engine [generated in 0.00005s] (9,)
[generated in 0.00005s] (9,)
2025-07-31 23:54:25,382 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results 
WHERE cycle_report_test_execution_results.id = $1::INTEGER
2025-07-31 23:54:25,382 INFO sqlalchemy.engine.Engine [generated in 0.00005s] (22,)
[generated in 0.00005s] (22,)
2025-07-31 23:54:25,384 INFO sqlalchemy.engine.Engine INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
INSERT INTO cycle_report_test_execution_audit (execution_id, action, action_details, performed_by, previous_status, new_status, change_reason) VALUES ($1::INTEGER, $2::VARCHAR, $3::JSONB, $4::INTEGER, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING cycle_report_test_execution_audit.id, cycle_report_test_execution_audit.performed_at, cycle_report_test_execution_audit.created_at
2025-07-31 23:54:25,384 INFO sqlalchemy.engine.Engine [generated in 0.00007s] (22, 'reviewed', '{"review_status": "rejected", "overall_score": 0.0, "requires_retest": true}', 3, None, None, None)
[generated in 0.00007s] (22, 'reviewed', '{"review_status": "rejected", "overall_score": 0.0, "requires_retest": true}', 3, None, None, None)
2025-07-31 23:54:25,386 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.078s
{"method": "POST", "url": "http://localhost:8000/api/v1/test-execution/executions/22/review", "status_code": 200, "process_time": 0.0791, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:25.390923Z"}
INFO:     127.0.0.1:64068 - "POST /api/v1/test-execution/executions/22/review HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:25.842074Z"}
GET http://localhost:8000/api/v1/users/me/permissions from 127.0.0.1
2025-07-31 23:54:25,849 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:25,849 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:25,849 INFO sqlalchemy.engine.Engine [cached since 12.89s ago] (3,)
[cached since 12.89s ago] (3,)
2025-07-31 23:54:25,860 INFO sqlalchemy.engine.Engine SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
SELECT rbac_roles.role_id, rbac_roles.role_name, rbac_roles.description, rbac_roles.is_system, rbac_roles.is_active, rbac_roles.created_at, rbac_roles.updated_at, rbac_roles.created_by_id, rbac_roles.updated_by_id 
FROM rbac_roles 
WHERE rbac_roles.role_name = $1::VARCHAR
2025-07-31 23:54:25,860 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ('Tester',)
[generated in 0.00011s] ('Tester',)
2025-07-31 23:54:25,862 INFO sqlalchemy.engine.Engine SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
SELECT rbac_permissions.permission_id, rbac_permissions.resource, rbac_permissions.action, rbac_permissions.description, rbac_permissions.created_at, rbac_permissions.updated_at, rbac_permissions.created_by_id, rbac_permissions.updated_by_id 
FROM rbac_permissions JOIN rbac_role_permissions ON rbac_permissions.permission_id = rbac_role_permissions.permission_id 
WHERE rbac_role_permissions.role_id = $1::INTEGER
2025-07-31 23:54:25,862 INFO sqlalchemy.engine.Engine [generated in 0.00008s] (3,)
[generated in 0.00008s] (3,)
2025-07-31 23:54:25,864 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.024s
{"method": "GET", "url": "http://localhost:8000/api/v1/users/me/permissions", "status_code": 200, "process_time": 0.0254, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:25.867516Z"}
INFO:     127.0.0.1:64068 - "GET /api/v1/users/me/permissions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.154851Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.157362Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.158315Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.158815Z"}
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.159164Z"}
GET http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status from 127.0.0.1
GET http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress from 127.0.0.1
GET http://localhost:8000/api/v1/cycle-reports/58/reports/156 from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases from 127.0.0.1
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:26,172 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:26,172 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:26,172 INFO sqlalchemy.engine.Engine [cached since 13.21s ago] (3,)
[cached since 13.21s ago] (3,)
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (3,)
[cached since 13.22s ago] (3,)
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (3,)
[cached since 13.22s ago] (3,)
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:26,173 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (3,)
[cached since 13.22s ago] (3,)
2025-07-31 23:54:26,175 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:26,175 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:26,175 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (3,)
[cached since 13.22s ago] (3,)
2025-07-31 23:54:26,187 INFO sqlalchemy.engine.Engine SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
SELECT cycle_reports.cycle_id, cycle_reports.report_id, cycle_reports.tester_id, cycle_reports.status, cycle_reports.started_at, cycle_reports.completed_at, cycle_reports.workflow_id, cycle_reports.created_at, cycle_reports.updated_at, cycle_reports.created_by_id, cycle_reports.updated_by_id, reports.id, reports.report_name, reports.report_number, reports.regulation, reports.description, reports.frequency, reports.business_unit, reports.regulatory_requirement, reports.status AS status_1, reports.report_owner_id, reports.lob_id, reports.is_active, reports.created_at AS created_at_1, reports.updated_at AS updated_at_1, reports.created_by_id AS created_by_id_1, reports.updated_by_id AS updated_by_id_1, users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id AS lob_id_1, users.is_active AS is_active_1, users.hashed_password, users.created_at AS created_at_2, users.updated_at AS updated_at_2, lobs.lob_id AS lob_id_2, lobs.lob_name, lobs.created_at AS created_at_3, lobs.updated_at AS updated_at_3, lobs.created_by_id AS created_by_id_2, lobs.updated_by_id AS updated_by_id_2 
FROM cycle_reports JOIN reports ON cycle_reports.report_id = reports.id LEFT OUTER JOIN users ON cycle_reports.tester_id = users.user_id LEFT OUTER JOIN lobs ON reports.lob_id = lobs.lob_id 
WHERE cycle_reports.cycle_id = $1::INTEGER AND cycle_reports.report_id = $2::INTEGER
2025-07-31 23:54:26,187 INFO sqlalchemy.engine.Engine [generated in 0.00015s] (58, 156)
[generated in 0.00015s] (58, 156)
Email templates loaded successfully
2025-07-31 23:54:26,195 INFO sqlalchemy.engine.Engine SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
SELECT universal_assignments.assignment_id, universal_assignments.assignment_type, universal_assignments.from_role, universal_assignments.to_role, universal_assignments.from_user_id, universal_assignments.to_user_id, universal_assignments.title, universal_assignments.description, universal_assignments.task_instructions, universal_assignments.context_type, universal_assignments.context_data, universal_assignments.status, universal_assignments.priority, universal_assignments.assigned_at, universal_assignments.due_date, universal_assignments.acknowledged_at, universal_assignments.started_at, universal_assignments.completed_at, universal_assignments.completed_by_user_id, universal_assignments.completion_notes, universal_assignments.completion_data, universal_assignments.completion_attachments, universal_assignments.requires_approval, universal_assignments.approval_role, universal_assignments.approved_by_user_id, universal_assignments.approved_at, universal_assignments.approval_notes, universal_assignments.escalated, universal_assignments.escalated_at, universal_assignments.escalated_to_user_id, universal_assignments.escalation_reason, universal_assignments.delegated_to_user_id, universal_assignments.delegated_at, universal_assignments.delegation_reason, universal_assignments.created_at, universal_assignments.updated_at, universal_assignments.assignment_metadata, universal_assignments.workflow_step, universal_assignments.parent_assignment_id, universal_assignments.created_by_id, universal_assignments.updated_by_id 
FROM universal_assignments 
WHERE universal_assignments.context_type = $1::universal_context_type_enum AND (universal_assignments.context_data ->> $2::TEXT) = $3::VARCHAR AND (universal_assignments.context_data ->> $4::TEXT) = $5::VARCHAR AND (universal_assignments.context_data ->> $6::TEXT) = $7::VARCHAR AND universal_assignments.status IN ($8::universal_assignment_status_enum, $9::universal_assignment_status_enum, $10::universal_assignment_status_enum) ORDER BY universal_assignments.created_at DESC
2025-07-31 23:54:26,195 INFO sqlalchemy.engine.Engine [generated in 0.00019s] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
[generated in 0.00019s] ('Report', 'cycle_id', '58', 'report_id', '156', 'phase_name', 'Testing', 'Assigned', 'Acknowledged', 'In Progress')
API: Getting status for phase Test Execution, cycle 58, report 156
{"event": "Getting phase status for: Test Execution, cycle: 58, report: 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:26.196720Z"}
{"event": "Getting Test Execution status from activity management for cycle 58, report 156", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:26.196789Z"}
2025-07-31 23:54:26,197 INFO sqlalchemy.engine.Engine SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
SELECT activity_definitions.id, activity_definitions.phase_name, activity_definitions.activity_name, activity_definitions.activity_code, activity_definitions.description, activity_definitions.activity_type, activity_definitions.requires_backend_action, activity_definitions.backend_endpoint, activity_definitions.sequence_order, activity_definitions.depends_on_activity_codes, activity_definitions.button_text, activity_definitions.success_message, activity_definitions.instructions, activity_definitions.can_skip, activity_definitions.can_reset, activity_definitions.auto_complete_on_condition, activity_definitions.conditional_skip_rules, activity_definitions.is_active, activity_definitions.created_at, activity_definitions.updated_at, activity_definitions.created_by_id, activity_definitions.updated_by_id 
FROM activity_definitions 
WHERE lower(activity_definitions.phase_name) = lower($1::VARCHAR) AND activity_definitions.is_active = true ORDER BY activity_definitions.sequence_order
2025-07-31 23:54:26,197 INFO sqlalchemy.engine.Engine [generated in 0.00008s] ('Test Execution',)
[generated in 0.00008s] ('Test Execution',)
2025-07-31 23:54:26,200 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases JOIN workflow_phases ON cycle_report_test_cases.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_cases.status IN ($3::phase_status_enum, $4::phase_status_enum)
2025-07-31 23:54:26,200 INFO sqlalchemy.engine.Engine [generated in 0.00017s] (58, 156, 'Pending Approval', 'Complete')
[generated in 0.00017s] (58, 156, 'Pending Approval', 'Complete')
2025-07-31 23:54:26,200 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:26,201 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (58, 156)
[cached since 13.22s ago] (58, 156)
2025-07-31 23:54:26,203 INFO sqlalchemy.engine.Engine SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
SELECT activity_states.id, activity_states.cycle_id, activity_states.report_id, activity_states.phase_name, activity_states.activity_definition_id, activity_states.status, activity_states.started_at, activity_states.started_by, activity_states.completed_at, activity_states.completed_by, activity_states.is_blocked, activity_states.blocking_reason, activity_states.blocked_by_activities, activity_states.completion_data, activity_states.completion_notes, activity_states.reset_count, activity_states.last_reset_at, activity_states.last_reset_by, activity_states.created_at, activity_states.updated_at, activity_states.created_by_id, activity_states.updated_by_id 
FROM activity_states 
WHERE activity_states.cycle_id = $1::INTEGER AND activity_states.report_id = $2::INTEGER AND lower(activity_states.phase_name) = lower($3::VARCHAR)
2025-07-31 23:54:26,203 INFO sqlalchemy.engine.Engine [generated in 0.00011s] (58, 156, 'Test Execution')
[generated in 0.00011s] (58, 156, 'Test Execution')
2025-07-31 23:54:26,203 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:26,203 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (480,)
[cached since 13.22s ago] (480,)
2025-07-31 23:54:26,204 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:26,204 INFO sqlalchemy.engine.Engine [cached since 13.25s ago] (4,)
[cached since 13.25s ago] (4,)
2025-07-31 23:54:26,204 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"event": "Got 4 activities from activity management service for Test Execution", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:26.205268Z"}
2025-07-31 23:54:26,205 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:54:26,205 INFO sqlalchemy.engine.Engine [generated in 0.00006s] (58, 156, 'Test Execution')
[generated in 0.00006s] (58, 156, 'Test Execution')
2025-07-31 23:54:26,206 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.045s
2025-07-31 23:54:26,208 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:26,208 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (3,)
[cached since 13.22s ago] (3,)
{"method": "GET", "url": "http://localhost:8000/api/v1/cycle-reports/58/reports/156", "status_code": 200, "process_time": 0.0507, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.208973Z"}
INFO:     127.0.0.1:64080 - "GET /api/v1/cycle-reports/58/reports/156 HTTP/1.1" 200 OK
2025-07-31 23:54:26,209 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:26,209 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (434,)
[cached since 13.22s ago] (434,)
2025-07-31 23:54:26,211 INFO sqlalchemy.engine.Engine SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
SELECT cycle_report_planning_attributes.id AS cycle_report_planning_attributes_id, cycle_report_planning_attributes.phase_id AS cycle_report_planning_attributes_phase_id, cycle_report_planning_attributes.attribute_name AS cycle_report_planning_attributes_attribute_name, cycle_report_planning_attributes.description AS cycle_report_planning_attributes_description, cycle_report_planning_attributes.data_type AS cycle_report_planning_attributes_data_type, cycle_report_planning_attributes.is_mandatory AS cycle_report_planning_attributes_is_mandatory, cycle_report_planning_attributes.is_cde AS cycle_report_planning_attributes_is_cde, cycle_report_planning_attributes.has_issues AS cycle_report_planning_attributes_has_issues, cycle_report_planning_attributes.is_scoped AS cycle_report_planning_attributes_is_scoped, cycle_report_planning_attributes.llm_generated AS cycle_report_planning_attributes_llm_generated, cycle_report_planning_attributes.llm_rationale AS cycle_report_planning_attributes_llm_rationale, cycle_report_planning_attributes.tester_notes AS cycle_report_planning_attributes_tester_notes, cycle_report_planning_attributes.line_item_number AS cycle_report_planning_attributes_line_item_number, cycle_report_planning_attributes.technical_line_item_name AS cycle_report_planning_attributes_technical_line_item_name, cycle_report_planning_attributes.mdrm AS cycle_report_planning_attributes_mdrm, cycle_report_planning_attributes.validation_rules AS cycle_report_planning_attributes_validation_rules, cycle_report_planning_attributes.typical_source_documents AS cycle_report_planning_attributes_typical_source_documents, cycle_report_planning_attributes.keywords_to_look_for AS cycle_report_planning_attributes_keywords_to_look_for, cycle_report_planning_attributes.testing_approach AS cycle_report_planning_attributes_testing_approach, cycle_report_planning_attributes.risk_score AS cycle_report_planning_attributes_risk_score, cycle_report_planning_attributes.llm_risk_rationale AS cycle_report_planning_attributes_llm_risk_rationale, cycle_report_planning_attributes.is_primary_key AS cycle_report_planning_attributes_is_primary_key, cycle_report_planning_attributes.primary_key_order AS cycle_report_planning_attributes_primary_key_order, cycle_report_planning_attributes.information_security_classification AS cycle_report_planning_attributes_information_security_cla_1, cycle_report_planning_attributes.status AS cycle_report_planning_attributes_status, cycle_report_planning_attributes.master_attribute_id AS cycle_report_planning_attributes_master_attribute_id, cycle_report_planning_attributes.version AS cycle_report_planning_attributes_version, cycle_report_planning_attributes.is_latest_version AS cycle_report_planning_attributes_is_latest_version, cycle_report_planning_attributes.is_active AS cycle_report_planning_attributes_is_active, cycle_report_planning_attributes.version_notes AS cycle_report_planning_attributes_version_notes, cycle_report_planning_attributes.change_reason AS cycle_report_planning_attributes_change_reason, cycle_report_planning_attributes.replaced_attribute_id AS cycle_report_planning_attributes_replaced_attribute_id, cycle_report_planning_attributes.version_created_at AS cycle_report_planning_attributes_version_created_at, cycle_report_planning_attributes.version_created_by AS cycle_report_planning_attributes_version_created_by, cycle_report_planning_attributes.approved_at AS cycle_report_planning_attributes_approved_at, cycle_report_planning_attributes.approved_by AS cycle_report_planning_attributes_approved_by, cycle_report_planning_attributes.archived_at AS cycle_report_planning_attributes_archived_at, cycle_report_planning_attributes.archived_by AS cycle_report_planning_attributes_archived_by, cycle_report_planning_attributes.created_at AS cycle_report_planning_attributes_created_at, cycle_report_planning_attributes.updated_at AS cycle_report_planning_attributes_updated_at, cycle_report_planning_attributes.created_by_id AS cycle_report_planning_attributes_created_by_id, cycle_report_planning_attributes.updated_by_id AS cycle_report_planning_attributes_updated_by_id 
FROM cycle_report_planning_attributes 
WHERE cycle_report_planning_attributes.id IN ($1::INTEGER)
2025-07-31 23:54:26,211 INFO sqlalchemy.engine.Engine [generated in 0.00014s] (400,)
[generated in 0.00014s] (400,)
Response 200 in 0.050s
2025-07-31 23:54:26,212 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:26,213 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] (435,)
[cached since 13.22s ago] (435,)
2025-07-31 23:54:26,213 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
SELECT workflow_phases.phase_id, workflow_phases.cycle_id, workflow_phases.report_id, workflow_phases.phase_name, workflow_phases.phase_order, workflow_phases.status, workflow_phases.state, workflow_phases.schedule_status, workflow_phases.data_requested_at, workflow_phases.data_requested_by, workflow_phases.data_received_at, workflow_phases.rules_generated_at, workflow_phases.profiling_executed_at, workflow_phases.risk_level, workflow_phases.metadata, workflow_phases.progress_percentage, workflow_phases.estimated_completion_date, workflow_phases.sla_deadline, workflow_phases.is_sla_breached, workflow_phases.state_override, workflow_phases.status_override, workflow_phases.override_reason, workflow_phases.override_by, workflow_phases.override_at, workflow_phases.planned_start_date, workflow_phases.planned_end_date, workflow_phases.actual_start_date, workflow_phases.actual_end_date, workflow_phases.started_by, workflow_phases.completed_by, workflow_phases.notes, workflow_phases.phase_data, workflow_phases.created_at, workflow_phases.updated_at, workflow_phases.created_by_id, workflow_phases.updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND workflow_phases.phase_name = $3::workflow_phase_enum
2025-07-31 23:54:26,213 INFO sqlalchemy.engine.Engine [generated in 0.00009s] (58, 156, 'Test Execution')
[generated in 0.00009s] (58, 156, 'Test Execution')
2025-07-31 23:54:26,214 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"method": "GET", "url": "http://localhost:8000/api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress", "status_code": 200, "process_time": 0.0579, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.214333Z"}
INFO:     127.0.0.1:64079 - "GET /api/v1/universal-assignments/context/Report?cycle_id=58&report_id=156&phase_name=Testing&status_filter=Assigned,Acknowledged,In+Progress HTTP/1.1" 200 OK
2025-07-31 23:54:26,217 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:26,217 INFO sqlalchemy.engine.Engine [generated in 0.00010s] (6,)
[generated in 0.00010s] (6,)
Response 200 in 0.052s
2025-07-31 23:54:26,219 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_evidence.test_case_id AS cycle_report_test_cases_evidence_test_case_id, cycle_report_test_cases_evidence.id AS cycle_report_test_cases_evidence_id, cycle_report_test_cases_evidence.phase_id AS cycle_report_test_cases_evidence_phase_id, cycle_report_test_cases_evidence.cycle_id AS cycle_report_test_cases_evidence_cycle_id, cycle_report_test_cases_evidence.report_id AS cycle_report_test_cases_evidence_report_id, cycle_report_test_cases_evidence.sample_id AS cycle_report_test_cases_evidence_sample_id, cycle_report_test_cases_evidence.evidence_type AS cycle_report_test_cases_evidence_evidence_type, cycle_report_test_cases_evidence.version_number AS cycle_report_test_cases_evidence_version_number, cycle_report_test_cases_evidence.is_current AS cycle_report_test_cases_evidence_is_current, cycle_report_test_cases_evidence.parent_evidence_id AS cycle_report_test_cases_evidence_parent_evidence_id, cycle_report_test_cases_evidence.data_owner_id AS cycle_report_test_cases_evidence_data_owner_id, cycle_report_test_cases_evidence.submitted_at AS cycle_report_test_cases_evidence_submitted_at, cycle_report_test_cases_evidence.submission_notes AS cycle_report_test_cases_evidence_submission_notes, cycle_report_test_cases_evidence.submission_number AS cycle_report_test_cases_evidence_submission_number, cycle_report_test_cases_evidence.is_revision AS cycle_report_test_cases_evidence_is_revision, cycle_report_test_cases_evidence.revision_requested_by AS cycle_report_test_cases_evidence_revision_requested_by, cycle_report_test_cases_evidence.revision_requested_at AS cycle_report_test_cases_evidence_revision_requested_at, cycle_report_test_cases_evidence.revision_reason AS cycle_report_test_cases_evidence_revision_reason, cycle_report_test_cases_evidence.revision_deadline AS cycle_report_test_cases_evidence_revision_deadline, cycle_report_test_cases_evidence.validation_status AS cycle_report_test_cases_evidence_validation_status, cycle_report_test_cases_evidence.validation_notes AS cycle_report_test_cases_evidence_validation_notes, cycle_report_test_cases_evidence.validated_by AS cycle_report_test_cases_evidence_validated_by, cycle_report_test_cases_evidence.validated_at AS cycle_report_test_cases_evidence_validated_at, cycle_report_test_cases_evidence.tester_decision AS cycle_report_test_cases_evidence_tester_decision, cycle_report_test_cases_evidence.tester_notes AS cycle_report_test_cases_evidence_tester_notes, cycle_report_test_cases_evidence.decided_by AS cycle_report_test_cases_evidence_decided_by, cycle_report_test_cases_evidence.decided_at AS cycle_report_test_cases_evidence_decided_at, cycle_report_test_cases_evidence.requires_resubmission AS cycle_report_test_cases_evidence_requires_resubmission, cycle_report_test_cases_evidence.resubmission_deadline AS cycle_report_test_cases_evidence_resubmission_deadline, cycle_report_test_cases_evidence.original_filename AS cycle_report_test_cases_evidence_original_filename, cycle_report_test_cases_evidence.stored_filename AS cycle_report_test_cases_evidence_stored_filename, cycle_report_test_cases_evidence.file_path AS cycle_report_test_cases_evidence_file_path, cycle_report_test_cases_evidence.file_size_bytes AS cycle_report_test_cases_evidence_file_size_bytes, cycle_report_test_cases_evidence.file_hash AS cycle_report_test_cases_evidence_file_hash, cycle_report_test_cases_evidence.mime_type AS cycle_report_test_cases_evidence_mime_type, cycle_report_test_cases_evidence.document_type AS cycle_report_test_cases_evidence_document_type, cycle_report_test_cases_evidence.rfi_data_source_id AS cycle_report_test_cases_evidence_rfi_data_source_id, cycle_report_test_cases_evidence.planning_data_source_id AS cycle_report_test_cases_evidence_planning_data_source_id, cycle_report_test_cases_evidence.query_text AS cycle_report_test_cases_evidence_query_text, cycle_report_test_cases_evidence.query_parameters AS cycle_report_test_cases_evidence_query_parameters, cycle_report_test_cases_evidence.query_validation_id AS cycle_report_test_cases_evidence_query_validation_id, cycle_report_test_cases_evidence.created_at AS cycle_report_test_cases_evidence_created_at, cycle_report_test_cases_evidence.updated_at AS cycle_report_test_cases_evidence_updated_at, cycle_report_test_cases_evidence.created_by AS cycle_report_test_cases_evidence_created_by, cycle_report_test_cases_evidence.updated_by AS cycle_report_test_cases_evidence_updated_by, cycle_report_test_cases_evidence.created_by_id AS cycle_report_test_cases_evidence_created_by_id, cycle_report_test_cases_evidence.updated_by_id AS cycle_report_test_cases_evidence_updated_by_id 
FROM cycle_report_test_cases_evidence 
WHERE cycle_report_test_cases_evidence.test_case_id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:54:26,219 INFO sqlalchemy.engine.Engine [generated in 0.00014s] (436, 434, 435, 437)
[generated in 0.00014s] (436, 434, 435, 437)
{"event": "Added Test Execution phase-specific metrics from Universal Metrics Service: {}", "logger": "app.services.unified_status_service", "level": "info", "timestamp": "2025-08-01T03:54:26.220205Z"}
2025-07-31 23:54:26,220 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0617, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.220871Z"}
INFO:     127.0.0.1:64082 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
Response 200 in 0.064s
{"method": "GET", "url": "http://localhost:8000/api/v1/status/cycles/58/reports/156/phases/Test Execution/status", "status_code": 200, "process_time": 0.0688, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.223610Z"}
INFO:     127.0.0.1:64068 - "GET /api/v1/status/cycles/58/reports/156/phases/Test%20Execution/status HTTP/1.1" 200 OK
2025-07-31 23:54:26,226 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
SELECT cycle_report_test_cases_1.id AS cycle_report_test_cases_1_id, cycle_report_sample_selection_samples.sample_id AS cycle_report_sample_selection_samples_sample_id, cycle_report_sample_selection_samples.version_id AS cycle_report_sample_selection_samples_version_id, cycle_report_sample_selection_samples.phase_id AS cycle_report_sample_selection_samples_phase_id, cycle_report_sample_selection_samples.lob_id AS cycle_report_sample_selection_samples_lob_id, cycle_report_sample_selection_samples.sample_identifier AS cycle_report_sample_selection_samples_sample_identifier, cycle_report_sample_selection_samples.sample_data AS cycle_report_sample_selection_samples_sample_data, cycle_report_sample_selection_samples.sample_category AS cycle_report_sample_selection_samples_sample_category, cycle_report_sample_selection_samples.sample_source AS cycle_report_sample_selection_samples_sample_source, cycle_report_sample_selection_samples.tester_decision AS cycle_report_sample_selection_samples_tester_decision, cycle_report_sample_selection_samples.tester_decision_notes AS cycle_report_sample_selection_samples_tester_decision_not_1, cycle_report_sample_selection_samples.tester_decision_at AS cycle_report_sample_selection_samples_tester_decision_at, cycle_report_sample_selection_samples.tester_decision_by_id AS cycle_report_sample_selection_samples_tester_decision_by__2, cycle_report_sample_selection_samples.report_owner_decision AS cycle_report_sample_selection_samples_report_owner_decisi_3, cycle_report_sample_selection_samples.report_owner_decision_notes AS cycle_report_sample_selection_samples_report_owner_decisi_4, cycle_report_sample_selection_samples.report_owner_decision_at AS cycle_report_sample_selection_samples_report_owner_decisi_5, cycle_report_sample_selection_samples.report_owner_decision_by_id AS cycle_report_sample_selection_samples_report_owner_decisi_6, cycle_report_sample_selection_samples.risk_score AS cycle_report_sample_selection_samples_risk_score, cycle_report_sample_selection_samples.confidence_score AS cycle_report_sample_selection_samples_confidence_score, cycle_report_sample_selection_samples.generation_metadata AS cycle_report_sample_selection_samples_generation_metadata, cycle_report_sample_selection_samples.validation_results AS cycle_report_sample_selection_samples_validation_results, cycle_report_sample_selection_samples.carried_from_version_id AS cycle_report_sample_selection_samples_carried_from_versio_7, cycle_report_sample_selection_samples.carried_from_sample_id AS cycle_report_sample_selection_samples_carried_from_sample_8, cycle_report_sample_selection_samples.carry_forward_reason AS cycle_report_sample_selection_samples_carry_forward_reaso_9, cycle_report_sample_selection_samples.created_at AS cycle_report_sample_selection_samples_created_at, cycle_report_sample_selection_samples.updated_at AS cycle_report_sample_selection_samples_updated_at, cycle_report_sample_selection_samples.created_by_id AS cycle_report_sample_selection_samples_created_by_id, cycle_report_sample_selection_samples.updated_by_id AS cycle_report_sample_selection_samples_updated_by_id 
FROM cycle_report_test_cases AS cycle_report_test_cases_1 JOIN cycle_report_sample_selection_samples ON cycle_report_test_cases_1.sample_id = CAST(cycle_report_sample_selection_samples.sample_id AS VARCHAR) 
WHERE cycle_report_test_cases_1.id IN ($1::INTEGER, $2::INTEGER, $3::INTEGER, $4::INTEGER)
2025-07-31 23:54:26,226 INFO sqlalchemy.engine.Engine [generated in 0.00014s] (436, 434, 435, 437)
[generated in 0.00014s] (436, 434, 435, 437)
2025-07-31 23:54:26,230 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.068s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/submitted-test-cases", "status_code": 200, "process_time": 0.0749, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:26.233719Z"}
INFO:     127.0.0.1:64081 - "GET /api/v1/test-execution/58/reports/156/submitted-test-cases HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:31.231781Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:31,248 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:31,248 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:31,248 INFO sqlalchemy.engine.Engine [cached since 18.29s ago] (3,)
[cached since 18.29s ago] (3,)
2025-07-31 23:54:31,268 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:31,268 INFO sqlalchemy.engine.Engine [cached since 18.29s ago] (58, 156)
[cached since 18.29s ago] (58, 156)
2025-07-31 23:54:31,276 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:31,277 INFO sqlalchemy.engine.Engine [cached since 18.3s ago] (480,)
[cached since 18.3s ago] (480,)
2025-07-31 23:54:31,286 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:31,287 INFO sqlalchemy.engine.Engine [cached since 18.3s ago] (3,)
[cached since 18.3s ago] (3,)
2025-07-31 23:54:31,289 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:31,289 INFO sqlalchemy.engine.Engine [cached since 18.3s ago] (434,)
[cached since 18.3s ago] (434,)
2025-07-31 23:54:31,292 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:31,293 INFO sqlalchemy.engine.Engine [cached since 18.3s ago] (435,)
[cached since 18.3s ago] (435,)
2025-07-31 23:54:31,294 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.068s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0713, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:31.303071Z"}
INFO:     127.0.0.1:64081 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "client_ip": "127.0.0.1", "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15", "event": "HTTP request started", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:36.315397Z"}
GET http://localhost:8000/api/v1/test-execution/58/reports/156/executions from 127.0.0.1
2025-07-31 23:54:36,323 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2025-07-31 23:54:36,323 INFO sqlalchemy.engine.Engine SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
SELECT users.user_id, users.first_name, users.last_name, users.email, users.phone, users.role, users.lob_id, users.is_active, users.hashed_password, users.created_at, users.updated_at 
FROM users 
WHERE users.user_id = $1::INTEGER
2025-07-31 23:54:36,323 INFO sqlalchemy.engine.Engine [cached since 23.37s ago] (3,)
[cached since 23.37s ago] (3,)
2025-07-31 23:54:36,335 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
SELECT cycle_report_test_execution_results.id, cycle_report_test_execution_results.phase_id, cycle_report_test_execution_results.test_case_id, cycle_report_test_execution_results.evidence_id, cycle_report_test_execution_results.execution_number, cycle_report_test_execution_results.is_latest_execution, cycle_report_test_execution_results.execution_reason, cycle_report_test_execution_results.test_type, cycle_report_test_execution_results.analysis_method, cycle_report_test_execution_results.sample_value, cycle_report_test_execution_results.extracted_value, cycle_report_test_execution_results.expected_value, cycle_report_test_execution_results.test_result, cycle_report_test_execution_results.comparison_result, cycle_report_test_execution_results.variance_details, cycle_report_test_execution_results.llm_confidence_score, cycle_report_test_execution_results.llm_analysis_rationale, cycle_report_test_execution_results.llm_model_used, cycle_report_test_execution_results.llm_tokens_used, cycle_report_test_execution_results.llm_response_raw, cycle_report_test_execution_results.llm_processing_time_ms, cycle_report_test_execution_results.database_query_executed, cycle_report_test_execution_results.database_result_count, cycle_report_test_execution_results.database_execution_time_ms, cycle_report_test_execution_results.database_result_sample, cycle_report_test_execution_results.execution_status, cycle_report_test_execution_results.started_at, cycle_report_test_execution_results.completed_at, cycle_report_test_execution_results.processing_time_ms, cycle_report_test_execution_results.error_message, cycle_report_test_execution_results.error_details, cycle_report_test_execution_results.retry_count, cycle_report_test_execution_results.analysis_results, cycle_report_test_execution_results.evidence_validation_status, cycle_report_test_execution_results.evidence_version_number, cycle_report_test_execution_results.execution_summary, cycle_report_test_execution_results.processing_notes, cycle_report_test_execution_results.executed_by, cycle_report_test_execution_results.execution_method, cycle_report_test_execution_results.created_at, cycle_report_test_execution_results.updated_at, cycle_report_test_execution_results.created_by, cycle_report_test_execution_results.updated_by 
FROM cycle_report_test_execution_results JOIN workflow_phases ON cycle_report_test_execution_results.phase_id = workflow_phases.phase_id 
WHERE workflow_phases.cycle_id = $1::INTEGER AND workflow_phases.report_id = $2::INTEGER AND cycle_report_test_execution_results.is_latest_execution = true
2025-07-31 23:54:36,335 INFO sqlalchemy.engine.Engine [cached since 23.36s ago] (58, 156)
[cached since 23.36s ago] (58, 156)
2025-07-31 23:54:36,338 INFO sqlalchemy.engine.Engine SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
SELECT workflow_phases.phase_id AS workflow_phases_phase_id, workflow_phases.cycle_id AS workflow_phases_cycle_id, workflow_phases.report_id AS workflow_phases_report_id, workflow_phases.phase_name AS workflow_phases_phase_name, workflow_phases.phase_order AS workflow_phases_phase_order, workflow_phases.status AS workflow_phases_status, workflow_phases.state AS workflow_phases_state, workflow_phases.schedule_status AS workflow_phases_schedule_status, workflow_phases.data_requested_at AS workflow_phases_data_requested_at, workflow_phases.data_requested_by AS workflow_phases_data_requested_by, workflow_phases.data_received_at AS workflow_phases_data_received_at, workflow_phases.rules_generated_at AS workflow_phases_rules_generated_at, workflow_phases.profiling_executed_at AS workflow_phases_profiling_executed_at, workflow_phases.risk_level AS workflow_phases_risk_level, workflow_phases.metadata AS workflow_phases_metadata, workflow_phases.progress_percentage AS workflow_phases_progress_percentage, workflow_phases.estimated_completion_date AS workflow_phases_estimated_completion_date, workflow_phases.sla_deadline AS workflow_phases_sla_deadline, workflow_phases.is_sla_breached AS workflow_phases_is_sla_breached, workflow_phases.state_override AS workflow_phases_state_override, workflow_phases.status_override AS workflow_phases_status_override, workflow_phases.override_reason AS workflow_phases_override_reason, workflow_phases.override_by AS workflow_phases_override_by, workflow_phases.override_at AS workflow_phases_override_at, workflow_phases.planned_start_date AS workflow_phases_planned_start_date, workflow_phases.planned_end_date AS workflow_phases_planned_end_date, workflow_phases.actual_start_date AS workflow_phases_actual_start_date, workflow_phases.actual_end_date AS workflow_phases_actual_end_date, workflow_phases.started_by AS workflow_phases_started_by, workflow_phases.completed_by AS workflow_phases_completed_by, workflow_phases.notes AS workflow_phases_notes, workflow_phases.phase_data AS workflow_phases_phase_data, workflow_phases.created_at AS workflow_phases_created_at, workflow_phases.updated_at AS workflow_phases_updated_at, workflow_phases.created_by_id AS workflow_phases_created_by_id, workflow_phases.updated_by_id AS workflow_phases_updated_by_id 
FROM workflow_phases 
WHERE workflow_phases.phase_id IN ($1::INTEGER)
2025-07-31 23:54:36,338 INFO sqlalchemy.engine.Engine [cached since 23.36s ago] (480,)
[cached since 23.36s ago] (480,)
2025-07-31 23:54:36,342 INFO sqlalchemy.engine.Engine SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
SELECT users.user_id AS users_user_id, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.phone AS users_phone, users.role AS users_role, users.lob_id AS users_lob_id, users.is_active AS users_is_active, users.hashed_password AS users_hashed_password, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.user_id IN ($1::INTEGER)
2025-07-31 23:54:36,342 INFO sqlalchemy.engine.Engine [cached since 23.36s ago] (3,)
[cached since 23.36s ago] (3,)
2025-07-31 23:54:36,343 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:36,343 INFO sqlalchemy.engine.Engine [cached since 23.35s ago] (434,)
[cached since 23.35s ago] (434,)
2025-07-31 23:54:36,344 INFO sqlalchemy.engine.Engine SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
SELECT cycle_report_test_cases.id, cycle_report_test_cases.test_case_number, cycle_report_test_cases.test_case_name, cycle_report_test_cases.description, cycle_report_test_cases.expected_outcome, cycle_report_test_cases.test_type, cycle_report_test_cases.query_text, cycle_report_test_cases.version, cycle_report_test_cases.status, cycle_report_test_cases.phase_id, cycle_report_test_cases.sample_id, cycle_report_test_cases.attribute_id, cycle_report_test_cases.attribute_name, cycle_report_test_cases.lob_id, cycle_report_test_cases.data_owner_id, cycle_report_test_cases.assigned_by, cycle_report_test_cases.assigned_at, cycle_report_test_cases.submission_deadline, cycle_report_test_cases.submitted_at, cycle_report_test_cases.acknowledged_at, cycle_report_test_cases.special_instructions, cycle_report_test_cases.created_by, cycle_report_test_cases.updated_by, cycle_report_test_cases.created_at, cycle_report_test_cases.updated_at 
FROM cycle_report_test_cases 
WHERE cycle_report_test_cases.id = $1::INTEGER
2025-07-31 23:54:36,344 INFO sqlalchemy.engine.Engine [cached since 23.36s ago] (435,)
[cached since 23.36s ago] (435,)
2025-07-31 23:54:36,344 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
Response 200 in 0.030s
{"method": "GET", "url": "http://localhost:8000/api/v1/test-execution/58/reports/156/executions", "status_code": 200, "process_time": 0.0323, "event": "HTTP request completed", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:36.347667Z"}
INFO:     127.0.0.1:64131 - "GET /api/v1/test-execution/58/reports/156/executions HTTP/1.1" 200 OK
INFO:     Shutting down
INFO:     Waiting for application shutdown.
{"event": "Database connections closed", "logger": "app.core.database", "level": "info", "timestamp": "2025-08-01T03:54:38.408290Z"}
{"event": "Shutting down SynapseDT application", "logger": "app.main", "level": "info", "timestamp": "2025-08-01T03:54:38.408338Z"}
INFO:     Application shutdown complete.
INFO:     Finished server process [60879]
INFO:     Stopping reloader process [59820]
