#!/usr/bin/env python3
"""Check all samples with decisions"""

import asyncio
import httpx
import json

async def check_samples():
    async with httpx.AsyncClient() as client:
        # Login as Jane
        login = await client.post('http://localhost:8001/api/v1/auth/login', 
            json={'email': 'tester@example.com', 'password': 'password123'})
        
        if login.status_code != 200:
            print(f"Login failed: {login.status_code}")
            return
            
        token = login.json()['access_token']
        
        # Get samples
        resp = await client.get(
            'http://localhost:8001/api/v1/sample-selection/cycles/13/reports/156/samples',
            headers={'Authorization': f'Bearer {token}'}
        )
        
        if resp.status_code == 200:
            data = resp.json()
            print(f'\nTotal samples found: {len(data["cycle_report_sample_selection_samples"])}\n')
            
            # Show all samples with details
            for i, sample in enumerate(data['samples']):
                print(f'Sample {i+1}:')
                print(f'  ID: {sample["sample_id"]}')
                print(f'  Generated By: {sample.get("generated_by", "Unknown")}')
                print(f'  Tester Decision: {sample.get("tester_decision", "None")}')
                print(f'  Is Submitted: {sample.get("is_submitted", False)}')
                print(f'  Primary Key: {sample.get("primary_key_value", "Unknown")}')
                print()
                
            # Count decisions
            no_decision = [s for s in data['samples'] if not s.get('tester_decision')]
            included = [s for s in data['samples'] if s.get('tester_decision') == 'include']
            excluded = [s for s in data['samples'] if s.get('tester_decision') == 'exclude']
            
            print("\nSummary:")
            print(f"  No decision: {len(no_decision)} samples")
            print(f"  Included: {len(included)} samples")
            print(f"  Excluded: {len(excluded)} samples")
            
            if no_decision:
                print(f"\nSamples without decisions: {[s['sample_id'] for s in no_decision]}")

if __name__ == "__main__":
    asyncio.run(check_samples())