#!/usr/bin/env python3
"""Check all samples with full details"""

import asyncio
import httpx
import json
from datetime import datetime

async def check_with_user(email, password, user_name):
    print(f"\n{'='*60}")
    print(f"Checking as {user_name} ({email})")
    print('='*60)
    
    async with httpx.AsyncClient() as client:
        # Login
        login = await client.post('http://localhost:8001/api/v1/auth/login', 
            json={'email': email, 'password': password})
        
        if login.status_code != 200:
            print(f"Login failed: {login.status_code}")
            return
            
        token = login.json()['access_token']
        
        # Get samples
        resp = await client.get(
            'http://localhost:8001/api/v1/sample-selection/cycles/13/reports/156/samples',
            headers={'Authorization': f'Bearer {token}'}
        )
        
        if resp.status_code == 200:
            data = resp.json()
            print(f'\nTotal samples found: {len(data["cycle_report_sample_selection_samples"])}\n')
            
            # Show all samples with details
            for i, sample in enumerate(data['samples']):
                print(f'Sample {i+1}:')
                print(f'  ID: {sample["sample_id"]}')
                print(f'  Generated By: {sample.get("generated_by", "Unknown")}')
                print(f'  Generated At: {sample.get("generated_at", "Unknown")}')
                print(f'  Generation Method: {sample.get("generation_method", "Unknown")}')
                print(f'  Primary Key: {sample.get("primary_key_value", "Unknown")}')
                print()
        else:
            print(f'Error: {resp.status_code} - {resp.text}')

async def main():
    # Check as tester
    await check_with_user('tester@synapse.com', 'TestUser123!', 'Test User (Tester)')
    
    # Check as Jane (tester)
    await check_with_user('jane.doe@synapse.com', 'TestUser123!', 'Jane Doe (Tester)')
    
    # Check as report owner
    await check_with_user('reportowner@synapse.com', 'TestUser123!', 'Report Owner')

if __name__ == "__main__":
    asyncio.run(main())